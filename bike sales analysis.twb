<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0114.1153                               -->
<workbook original-version='18.1' source-build='2024.3.3 (20243.25.0114.1153)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='brands.csv+ (Multiple Connections)' inline='true' name='federated.18r1qsd1czddwj1eytzid14kp96c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='brands' name='textscan.16mq78f1z0m7yi19j56h60ravk5o'>
            <connection class='textscan' directory='C:/SQL PROGRAMS/Bike Sales_dataset' filename='brands.csv' password='' server='' />
          </named-connection>
          <named-connection caption='stores' name='textscan.1an0dyv0oul54a18iit3t08zb2xy'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/SQL PROGRAMS/Bike Sales_dataset/stores.csv' dataRefreshTime='' directory='C:/SQL PROGRAMS/Bike Sales_dataset' filename='C:/Users/TANUMA~1/AppData/Local/Temp/TableauTemp/0ip3wg70qep0lb14ekwbb1m2pgs7/stores.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='orders.csv' table='[orders#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='order_id' ordinal='0' />
              <column datatype='integer' name='customer_id' ordinal='1' />
              <column datatype='integer' name='order_status' ordinal='2' />
              <column datatype='date' name='order_date' ordinal='3' />
              <column datatype='date' name='required_date' ordinal='4' />
              <column datatype='date' name='shipped_date' ordinal='5' />
              <column datatype='integer' name='store_id' ordinal='6' />
              <column datatype='integer' name='staff_id' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='customers.csv' table='[customers#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='customer_id' ordinal='0' />
              <column datatype='string' name='first_name' ordinal='1' />
              <column datatype='string' name='last_name' ordinal='2' />
              <column datatype='string' name='phone' ordinal='3' />
              <column datatype='string' name='email' ordinal='4' />
              <column datatype='string' name='street' ordinal='5' />
              <column datatype='string' name='city' ordinal='6' />
              <column datatype='string' name='state' ordinal='7' />
              <column datatype='integer' name='zip_code' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='order_items.csv' table='[order_items#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='order_id' ordinal='0' />
              <column datatype='integer' name='item_id' ordinal='1' />
              <column datatype='integer' name='product_id' ordinal='2' />
              <column datatype='integer' name='quantity' ordinal='3' />
              <column datatype='real' name='list_price' ordinal='4' />
              <column datatype='real' name='discount' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='products.csv' table='[products#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='product_id' ordinal='0' />
              <column datatype='string' name='product_name' ordinal='1' />
              <column datatype='integer' name='brand_id' ordinal='2' />
              <column datatype='integer' name='category_id' ordinal='3' />
              <column datatype='integer' name='model_year' ordinal='4' />
              <column datatype='real' name='list_price' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='brands.csv' table='[brands#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='brand_id' ordinal='0' />
              <column datatype='string' name='brand_name' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='categories.csv' table='[categories#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='category_id' ordinal='0' />
              <column datatype='string' name='category_name' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='stocks.csv' table='[stocks#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='store_id' ordinal='0' />
              <column datatype='integer' name='product_id' ordinal='1' />
              <column datatype='integer' name='quantity' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='stores.csv' table='[stores#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='store_id' ordinal='0' />
              <column datatype='string' name='store_name' ordinal='1' />
              <column datatype='string' name='phone' ordinal='2' />
              <column datatype='string' name='email' ordinal='3' />
              <column datatype='string' name='street' ordinal='4' />
              <column datatype='string' name='city' ordinal='5' />
              <column datatype='string' name='state' ordinal='6' />
              <column datatype='integer' name='zip_code' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='staffs.csv' table='[staffs#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='staff_id' ordinal='0' />
              <column datatype='string' name='first_name' ordinal='1' />
              <column datatype='string' name='last_name' ordinal='2' />
              <column datatype='string' name='email' ordinal='3' />
              <column datatype='string' name='phone' ordinal='4' />
              <column datatype='integer' name='active' ordinal='5' />
              <column datatype='integer' name='store_id' ordinal='6' />
              <column datatype='integer' name='manager_id' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[active]' value='[staffs.csv].[active]' />
          <map key='[brand_id (brands.csv)]' value='[brands.csv].[brand_id]' />
          <map key='[brand_id]' value='[products.csv].[brand_id]' />
          <map key='[brand_name]' value='[brands.csv].[brand_name]' />
          <map key='[category_id (categories.csv)]' value='[categories.csv].[category_id]' />
          <map key='[category_id]' value='[products.csv].[category_id]' />
          <map key='[category_name]' value='[categories.csv].[category_name]' />
          <map key='[city (stores.csv)]' value='[stores.csv].[city]' />
          <map key='[city]' value='[customers.csv].[city]' />
          <map key='[customer_id (customers.csv)]' value='[customers.csv].[customer_id]' />
          <map key='[customer_id]' value='[orders.csv].[customer_id]' />
          <map key='[discount]' value='[order_items.csv].[discount]' />
          <map key='[email (staffs.csv)]' value='[staffs.csv].[email]' />
          <map key='[email (stores.csv)]' value='[stores.csv].[email]' />
          <map key='[email]' value='[customers.csv].[email]' />
          <map key='[first_name (staffs.csv)]' value='[staffs.csv].[first_name]' />
          <map key='[first_name]' value='[customers.csv].[first_name]' />
          <map key='[item_id]' value='[order_items.csv].[item_id]' />
          <map key='[last_name (staffs.csv)]' value='[staffs.csv].[last_name]' />
          <map key='[last_name]' value='[customers.csv].[last_name]' />
          <map key='[list_price (products.csv)]' value='[products.csv].[list_price]' />
          <map key='[list_price]' value='[order_items.csv].[list_price]' />
          <map key='[manager_id]' value='[staffs.csv].[manager_id]' />
          <map key='[model_year]' value='[products.csv].[model_year]' />
          <map key='[order_date]' value='[orders.csv].[order_date]' />
          <map key='[order_id (order_items.csv)]' value='[order_items.csv].[order_id]' />
          <map key='[order_id]' value='[orders.csv].[order_id]' />
          <map key='[order_status]' value='[orders.csv].[order_status]' />
          <map key='[phone (staffs.csv)]' value='[staffs.csv].[phone]' />
          <map key='[phone (stores.csv)]' value='[stores.csv].[phone]' />
          <map key='[phone]' value='[customers.csv].[phone]' />
          <map key='[product_id (products.csv)]' value='[products.csv].[product_id]' />
          <map key='[product_id (stocks.csv)]' value='[stocks.csv].[product_id]' />
          <map key='[product_id]' value='[order_items.csv].[product_id]' />
          <map key='[product_name]' value='[products.csv].[product_name]' />
          <map key='[quantity (stocks.csv)]' value='[stocks.csv].[quantity]' />
          <map key='[quantity]' value='[order_items.csv].[quantity]' />
          <map key='[required_date]' value='[orders.csv].[required_date]' />
          <map key='[shipped_date]' value='[orders.csv].[shipped_date]' />
          <map key='[staff_id (staffs.csv)]' value='[staffs.csv].[staff_id]' />
          <map key='[staff_id]' value='[orders.csv].[staff_id]' />
          <map key='[state (stores.csv)]' value='[stores.csv].[state]' />
          <map key='[state]' value='[customers.csv].[state]' />
          <map key='[store_id (staffs.csv)]' value='[staffs.csv].[store_id]' />
          <map key='[store_id (stocks.csv)]' value='[stocks.csv].[store_id]' />
          <map key='[store_id (stores.csv)]' value='[stores.csv].[store_id]' />
          <map key='[store_id]' value='[orders.csv].[store_id]' />
          <map key='[store_name]' value='[stores.csv].[store_name]' />
          <map key='[street (stores.csv)]' value='[stores.csv].[street]' />
          <map key='[street]' value='[customers.csv].[street]' />
          <map key='[zip_code (stores.csv)]' value='[stores.csv].[zip_code]' />
          <map key='[zip_code]' value='[customers.csv].[zip_code]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[order_items.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[products.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[brands.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[categories.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[stocks.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[stores.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[staffs.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_46C7D394AC914F539F480FC357ED6A9E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_id]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_46C7D394AC914F539F480FC357ED6A9E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_status</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_status]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_status</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_46C7D394AC914F539F480FC357ED6A9E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_46C7D394AC914F539F480FC357ED6A9E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>required_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[required_date]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>required_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_46C7D394AC914F539F480FC357ED6A9E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipped_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[shipped_date]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>shipped_date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_46C7D394AC914F539F480FC357ED6A9E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[store_id]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>store_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_46C7D394AC914F539F480FC357ED6A9E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[staff_id]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>staff_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_46C7D394AC914F539F480FC357ED6A9E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_id (customers.csv)]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[first_name]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>first_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_name]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>last_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[phone]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>phone</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>email</remote-name>
            <remote-type>129</remote-type>
            <local-name>[email]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>email</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>street</remote-name>
            <remote-type>129</remote-type>
            <local-name>[street]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>street</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>zip_code</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_id (order_items.csv)]</local-name>
            <parent-name>[order_items.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[order_items.csv_1F14E9F109724D8D99E96DA6FE6842EA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[item_id]</local-name>
            <parent-name>[order_items.csv]</parent-name>
            <remote-alias>item_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[order_items.csv_1F14E9F109724D8D99E96DA6FE6842EA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_id]</local-name>
            <parent-name>[order_items.csv]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[order_items.csv_1F14E9F109724D8D99E96DA6FE6842EA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[order_items.csv]</parent-name>
            <remote-alias>quantity</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[order_items.csv_1F14E9F109724D8D99E96DA6FE6842EA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>list_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[list_price]</local-name>
            <parent-name>[order_items.csv]</parent-name>
            <remote-alias>list_price</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[order_items.csv_1F14E9F109724D8D99E96DA6FE6842EA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[discount]</local-name>
            <parent-name>[order_items.csv]</parent-name>
            <remote-alias>discount</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[order_items.csv_1F14E9F109724D8D99E96DA6FE6842EA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_id (products.csv)]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[products.csv_486A16755D1C437CA957AEBF3F4EEC96]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_name]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>product_name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[products.csv_486A16755D1C437CA957AEBF3F4EEC96]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[brand_id]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>brand_id</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[products.csv_486A16755D1C437CA957AEBF3F4EEC96]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[products.csv_486A16755D1C437CA957AEBF3F4EEC96]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[model_year]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>model_year</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[products.csv_486A16755D1C437CA957AEBF3F4EEC96]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>list_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[list_price (products.csv)]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>list_price</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[products.csv_486A16755D1C437CA957AEBF3F4EEC96]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[brand_id (brands.csv)]</local-name>
            <parent-name>[brands.csv]</parent-name>
            <remote-alias>brand_id</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[brands.csv_61F2ED33BE0347A7BD6B7BB2D9363C29]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand_name]</local-name>
            <parent-name>[brands.csv]</parent-name>
            <remote-alias>brand_name</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[brands.csv_61F2ED33BE0347A7BD6B7BB2D9363C29]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category_id (categories.csv)]</local-name>
            <parent-name>[categories.csv]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[categories.csv_71BD837DD43F483598C7C88CB647E41B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category_name]</local-name>
            <parent-name>[categories.csv]</parent-name>
            <remote-alias>category_name</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[categories.csv_71BD837DD43F483598C7C88CB647E41B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[store_id (stocks.csv)]</local-name>
            <parent-name>[stocks.csv]</parent-name>
            <remote-alias>store_id</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[stocks.csv_BC538AC131CD41F19B20CF71397AACFD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_id (stocks.csv)]</local-name>
            <parent-name>[stocks.csv]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[stocks.csv_BC538AC131CD41F19B20CF71397AACFD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quantity (stocks.csv)]</local-name>
            <parent-name>[stocks.csv]</parent-name>
            <remote-alias>quantity</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[stocks.csv_BC538AC131CD41F19B20CF71397AACFD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[store_id (stores.csv)]</local-name>
            <parent-name>[stores.csv]</parent-name>
            <remote-alias>store_id</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[store_name]</local-name>
            <parent-name>[stores.csv]</parent-name>
            <remote-alias>store_name</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[phone (stores.csv)]</local-name>
            <parent-name>[stores.csv]</parent-name>
            <remote-alias>phone</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>email</remote-name>
            <remote-type>129</remote-type>
            <local-name>[email (stores.csv)]</local-name>
            <parent-name>[stores.csv]</parent-name>
            <remote-alias>email</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>street</remote-name>
            <remote-type>129</remote-type>
            <local-name>[street (stores.csv)]</local-name>
            <parent-name>[stores.csv]</parent-name>
            <remote-alias>street</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city (stores.csv)]</local-name>
            <parent-name>[stores.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (stores.csv)]</local-name>
            <parent-name>[stores.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip_code (stores.csv)]</local-name>
            <parent-name>[stores.csv]</parent-name>
            <remote-alias>zip_code</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[staff_id (staffs.csv)]</local-name>
            <parent-name>[staffs.csv]</parent-name>
            <remote-alias>staff_id</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[staffs.csv_99860EDB508A49FB84764BC424098C3C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[first_name (staffs.csv)]</local-name>
            <parent-name>[staffs.csv]</parent-name>
            <remote-alias>first_name</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[staffs.csv_99860EDB508A49FB84764BC424098C3C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_name (staffs.csv)]</local-name>
            <parent-name>[staffs.csv]</parent-name>
            <remote-alias>last_name</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[staffs.csv_99860EDB508A49FB84764BC424098C3C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>email</remote-name>
            <remote-type>129</remote-type>
            <local-name>[email (staffs.csv)]</local-name>
            <parent-name>[staffs.csv]</parent-name>
            <remote-alias>email</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[staffs.csv_99860EDB508A49FB84764BC424098C3C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[phone (staffs.csv)]</local-name>
            <parent-name>[staffs.csv]</parent-name>
            <remote-alias>phone</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[staffs.csv_99860EDB508A49FB84764BC424098C3C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[staffs.csv]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[staffs.csv_99860EDB508A49FB84764BC424098C3C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[store_id (staffs.csv)]</local-name>
            <parent-name>[staffs.csv]</parent-name>
            <remote-alias>store_id</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[staffs.csv_99860EDB508A49FB84764BC424098C3C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>manager_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[manager_id]</local-name>
            <parent-name>[staffs.csv]</parent-name>
            <remote-alias>manager_id</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[staffs.csv_99860EDB508A49FB84764BC424098C3C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([discount]) / TOTAL(SUM([discount]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([discount]) / TOTAL(SUM([discount]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='First Purchase' datatype='date' name='[Calculation_6847441759686111232]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [customer_id] : MIN([order_date])}' />
      </column>
      <column caption='Customer Type' datatype='string' name='[Calculation_6847441759695921153]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_6847441759686111232]= [order_date]THEN &quot;New&quot; &#13;&#10;ELSE &quot;Returning&quot;&#13;&#10;END' />
      </column>
      <column caption='Avg Order Value' datatype='real' name='[Calculation_7214766604076449794]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_914230793030995968])/COUNTD([order_id])' />
      </column>
      <column caption='Purchase frequency' datatype='integer' name='[Calculation_7214766604076859395]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([order_id])' />
      </column>
      <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[list_price]*[quantity]' />
      </column>
      <column caption='brands.csv' datatype='table' name='[__tableau_internal_object_id__].[brands.csv_61F2ED33BE0347A7BD6B7BB2D9363C29]' role='measure' type='quantitative' />
      <column caption='categories.csv' datatype='table' name='[__tableau_internal_object_id__].[categories.csv_71BD837DD43F483598C7C88CB647E41B]' role='measure' type='quantitative' />
      <column caption='customers.csv' datatype='table' name='[__tableau_internal_object_id__].[customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD]' role='measure' type='quantitative' />
      <column caption='order_items.csv' datatype='table' name='[__tableau_internal_object_id__].[order_items.csv_1F14E9F109724D8D99E96DA6FE6842EA]' role='measure' type='quantitative' />
      <column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_46C7D394AC914F539F480FC357ED6A9E]' role='measure' type='quantitative' />
      <column caption='products.csv' datatype='table' name='[__tableau_internal_object_id__].[products.csv_486A16755D1C437CA957AEBF3F4EEC96]' role='measure' type='quantitative' />
      <column caption='staffs.csv' datatype='table' name='[__tableau_internal_object_id__].[staffs.csv_99860EDB508A49FB84764BC424098C3C]' role='measure' type='quantitative' />
      <column caption='stocks.csv' datatype='table' name='[__tableau_internal_object_id__].[stocks.csv_BC538AC131CD41F19B20CF71397AACFD]' role='measure' type='quantitative' />
      <column caption='stores.csv' datatype='table' name='[__tableau_internal_object_id__].[stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C]' role='measure' type='quantitative' />
      <column caption='Active' datatype='integer' name='[active]' role='measure' type='quantitative' />
      <column caption='Brand Id (Brands.Csv)' datatype='integer' name='[brand_id (brands.csv)]' role='dimension' type='ordinal' />
      <column caption='Brand Id' datatype='integer' name='[brand_id]' role='dimension' semantic-role='' type='ordinal' />
      <column caption='Brand Name' datatype='string' name='[brand_name]' role='dimension' type='nominal' />
      <column caption='Category Id (Categories.Csv)' datatype='integer' name='[category_id (categories.csv)]' role='dimension' type='ordinal' />
      <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
      <column caption='City (Stores.Csv)' datatype='string' name='[city (stores.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Rowlett&quot;' value='&quot;Rowlett&quot;' />
          <semantic-value key='&quot;Santa Cruz&quot;' value='&quot;Santa Cruz&quot;' />
        </semantic-values>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Customer Id (Customers.Csv)' datatype='integer' name='[customer_id (customers.csv)]' role='dimension' type='ordinal' />
      <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
      <column caption='Discount' datatype='real' name='[discount]' role='measure' type='quantitative' />
      <column caption='Email (Staffs.Csv)' datatype='string' name='[email (staffs.csv)]' role='dimension' type='nominal' />
      <column caption='Email (Stores.Csv)' datatype='string' name='[email (stores.csv)]' role='dimension' type='nominal' />
      <column caption='Email' datatype='string' name='[email]' role='dimension' type='nominal' />
      <column caption='First Name (Staffs.Csv)' datatype='string' name='[first_name (staffs.csv)]' role='dimension' type='nominal' />
      <column caption='First Name' datatype='string' name='[first_name]' role='dimension' type='nominal' />
      <column caption='Item Id' datatype='integer' name='[item_id]' role='dimension' type='ordinal' />
      <column caption='Last Name (Staffs.Csv)' datatype='string' name='[last_name (staffs.csv)]' role='dimension' type='nominal' />
      <column caption='Last Name' datatype='string' name='[last_name]' role='dimension' type='nominal' />
      <column caption='List Price (Products.Csv)' datatype='real' name='[list_price (products.csv)]' role='measure' type='quantitative' />
      <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
      <column caption='Manager Id' datatype='integer' name='[manager_id]' role='dimension' type='ordinal' />
      <column caption='Model Year' datatype='integer' name='[model_year]' role='dimension' type='quantitative' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Order Id (Order Items.Csv)' datatype='integer' name='[order_id (order_items.csv)]' role='dimension' type='ordinal' />
      <column caption='Order Id' datatype='integer' name='[order_id]' role='dimension' type='ordinal' />
      <column caption='Order Status' datatype='integer' name='[order_status]' role='measure' type='quantitative' />
      <column caption='Phone (Staffs.Csv)' datatype='string' name='[phone (staffs.csv)]' role='dimension' type='nominal' />
      <column caption='Phone (Stores.Csv)' datatype='string' name='[phone (stores.csv)]' role='dimension' type='nominal' />
      <column caption='Phone' datatype='string' name='[phone]' role='dimension' type='nominal' />
      <column caption='Product Id (Products.Csv)' datatype='integer' name='[product_id (products.csv)]' role='dimension' type='ordinal' />
      <column caption='Product Id (Stocks.Csv)' datatype='integer' name='[product_id (stocks.csv)]' role='dimension' type='ordinal' />
      <column caption='Product Id' datatype='integer' name='[product_id]' role='dimension' type='ordinal' />
      <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
      <column caption='Quantity (Stocks.Csv)' datatype='integer' name='[quantity (stocks.csv)]' role='measure' type='quantitative' />
      <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
      <column caption='Required Date' datatype='date' name='[required_date]' role='dimension' type='ordinal' />
      <column caption='Shipped Date' datatype='date' name='[shipped_date]' role='dimension' type='ordinal' />
      <column caption='Staff Id (Staffs.Csv)' datatype='integer' name='[staff_id (staffs.csv)]' role='dimension' type='ordinal' />
      <column caption='Staff Id' datatype='integer' name='[staff_id]' role='dimension' type='ordinal' />
      <column caption='State (Stores.Csv)' datatype='string' name='[state (stores.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;TX&quot;' value='&quot;Texas&quot;' />
        </semantic-values>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;NY&quot;' value='&quot;United States&quot;' />
        </semantic-values>
      </column>
      <column caption='Store Id (Staffs.Csv)' datatype='integer' name='[store_id (staffs.csv)]' role='dimension' type='ordinal' />
      <column caption='Store Id (Stocks.Csv)' datatype='integer' name='[store_id (stocks.csv)]' role='dimension' type='ordinal' />
      <column caption='Store Id (Stores.Csv)' datatype='integer' name='[store_id (stores.csv)]' role='dimension' type='ordinal' />
      <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
      <column caption='Store Name' datatype='string' name='[store_name]' role='dimension' type='nominal' />
      <column caption='Street (Stores.Csv)' datatype='string' name='[street (stores.csv)]' role='dimension' type='nominal' />
      <column caption='Street' datatype='string' name='[street]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Zip Code (Stores.Csv)' datatype='integer' default-format='*00000' name='[zip_code (stores.csv)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Sum' caption='Zip Code' datatype='integer' default-format='*00000' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[customer_id (customers.csv)]' derivation='Count' name='[cnt:customer_id (customers.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[order_id (order_items.csv)]' derivation='Count' name='[cnt:order_id (order_items.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_id (customers.csv)]' derivation='CountD' name='[ctd:customer_id (customers.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[order_date]' derivation='Month' name='[mn:order_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[brand_name]' derivation='None' name='[none:brand_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[category_name]' derivation='None' name='[none:category_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[customer_id (customers.csv)]' derivation='None' name='[none:customer_id (customers.csv):ok]' pivot='key' type='ordinal' />
      <column-instance column='[store_id (stores.csv)]' derivation='None' name='[none:store_id (stores.csv):ok]' pivot='key' type='ordinal' />
      <column-instance column='[store_name]' derivation='None' name='[none:store_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[discount]' derivation='Avg' name='[pcrk:avg:discount:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[discount]' derivation='CountD' name='[pcrk:ctd:discount:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance aggregation-param='5' column='[Calculation_914230793030995968]' derivation='Percentile' name='[pcrk:prc5:Calculation_914230793030995968:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance aggregation-param='95' column='[Calculation_914230793030995968]' derivation='Percentile' name='[pcrk:prc95:Calculation_914230793030995968:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[pcrk:sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[discount]' derivation='Sum' name='[pcrk:sum:discount:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[discount]' derivation='Sum' name='[pcrk:sum:discount:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance aggregation-param='5' column='[Calculation_914230793030995968]' derivation='Percentile' name='[pcto:prc5:Calculation_914230793030995968:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[pcto:sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[discount]' derivation='Sum' name='[pcto:sum:discount:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[discount]' derivation='Sum' name='[pcto:sum:discount:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance aggregation-param='5' column='[Calculation_914230793030995968]' derivation='Percentile' name='[prc5:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
      <column-instance column='[discount]' derivation='Sum' name='[sum:discount:ok]' pivot='key' type='ordinal' />
      <column-instance column='[discount]' derivation='Sum' name='[sum:discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[order_date]' derivation='Month-Trunc' name='[tmn:order_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (Category Name)' hidden='true' name='[Action (Category Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[category_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer Type,MONTH(Order Date))' hidden='true' name='[Action (Customer Type,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6847441759695921153]' />
          <groupfilter function='level-members' level='[mn:order_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date))' hidden='true' name='[Action (MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:order_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Store Id (Stores.Csv),Store Name)' hidden='true' name='[Action (Store Id (Stores.Csv),Store Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[store_id (stores.csv)]' />
          <groupfilter function='level-members' level='[store_name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:category_name:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;Road Bikes&quot;</bucket>
            </map>
            <map to='#8d608d'>
              <bucket>&quot;Mountain Bikes&quot;</bucket>
            </map>
            <map to='#a5729b'>
              <bucket>&quot;Electric Bikes&quot;</bucket>
            </map>
            <map to='#bc86a9'>
              <bucket>&quot;Cyclocross Bicycles&quot;</bucket>
            </map>
            <map to='#cd9bbc'>
              <bucket>&quot;Cruisers Bicycles&quot;</bucket>
            </map>
            <map to='#dfb1d1'>
              <bucket>&quot;Comfort Bicycles&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Children Bicycles&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:store_id (stores.csv):ok]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>2</bucket>
            </map>
            <map to='#9a6a96'>
              <bucket>1</bucket>
            </map>
            <map to='#be89ac'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:store_name:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Santa Cruz Bikes&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;Rowlett Bikes&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Baldwin Bikes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[sum:discount:ok]' type='shape'>
            <map to='circle'>
              <bucket>497.57000000000448</bucket>
            </map>
            <map to='plus'>
              <bucket>184.49999999999685</bucket>
            </map>
            <map to='square'>
              <bucket>91.779999999999404</bucket>
            </map>
            <map to='times'>
              <bucket>221.28999999999564</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[pcto:sum:discount:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>0.18445645838776167</bucket>
            </map>
            <map to='circle'>
              <bucket>497.57000000000448</bucket>
            </map>
            <map to='diamond'>
              <bucket>0.37080209819722892</bucket>
            </map>
            <map to='plus'>
              <bucket>184.49999999999685</bucket>
            </map>
            <map to='square'>
              <bucket>91.779999999999404</bucket>
            </map>
            <map to='times'>
              <bucket>221.28999999999564</bucket>
            </map>
            <map to='triangle'>
              <bucket>0.44474144341498412</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:customer_id (customers.csv):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[ctd:customer_id (customers.csv):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[none:customer_id (customers.csv):ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[pcrk:avg:discount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[pcrk:ctd:discount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[pcrk:sum:discount:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[pcrk:sum:discount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[pcto:sum:discount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[none:brand_name:nk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_name:nk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[none:store_name:nk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[pcrk:prc5:Calculation_914230793030995968:qk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[pcrk:prc95:Calculation_914230793030995968:qk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[pcrk:sum:Calculation_914230793030995968:qk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[pcto:prc5:Calculation_914230793030995968:qk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[pcto:sum:Calculation_914230793030995968:qk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[prc5:Calculation_914230793030995968:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:discount:qk]&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:order_id (order_items.csv):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:brand_name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Electra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ritchey&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Pure Cycles&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Trek&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sun Bicycles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Heller&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Strider&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haro&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Surly&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='brands.csv' id='brands.csv_61F2ED33BE0347A7BD6B7BB2D9363C29'>
            <properties context=''>
              <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='brands.csv' table='[brands#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='brand_id' ordinal='0' />
                  <column datatype='string' name='brand_name' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='categories.csv' id='categories.csv_71BD837DD43F483598C7C88CB647E41B'>
            <properties context=''>
              <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='categories.csv' table='[categories#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='category_id' ordinal='0' />
                  <column datatype='string' name='category_name' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='customers.csv' id='customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD'>
            <properties context=''>
              <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='customers.csv' table='[customers#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='customer_id' ordinal='0' />
                  <column datatype='string' name='first_name' ordinal='1' />
                  <column datatype='string' name='last_name' ordinal='2' />
                  <column datatype='string' name='phone' ordinal='3' />
                  <column datatype='string' name='email' ordinal='4' />
                  <column datatype='string' name='street' ordinal='5' />
                  <column datatype='string' name='city' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='integer' name='zip_code' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='order_items.csv' id='order_items.csv_1F14E9F109724D8D99E96DA6FE6842EA'>
            <properties context=''>
              <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='order_items.csv' table='[order_items#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='order_id' ordinal='0' />
                  <column datatype='integer' name='item_id' ordinal='1' />
                  <column datatype='integer' name='product_id' ordinal='2' />
                  <column datatype='integer' name='quantity' ordinal='3' />
                  <column datatype='real' name='list_price' ordinal='4' />
                  <column datatype='real' name='discount' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='orders.csv' id='orders.csv_46C7D394AC914F539F480FC357ED6A9E'>
            <properties context=''>
              <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='orders.csv' table='[orders#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='order_id' ordinal='0' />
                  <column datatype='integer' name='customer_id' ordinal='1' />
                  <column datatype='integer' name='order_status' ordinal='2' />
                  <column datatype='date' name='order_date' ordinal='3' />
                  <column datatype='date' name='required_date' ordinal='4' />
                  <column datatype='date' name='shipped_date' ordinal='5' />
                  <column datatype='integer' name='store_id' ordinal='6' />
                  <column datatype='integer' name='staff_id' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='products.csv' id='products.csv_486A16755D1C437CA957AEBF3F4EEC96'>
            <properties context=''>
              <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='products.csv' table='[products#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='product_id' ordinal='0' />
                  <column datatype='string' name='product_name' ordinal='1' />
                  <column datatype='integer' name='brand_id' ordinal='2' />
                  <column datatype='integer' name='category_id' ordinal='3' />
                  <column datatype='integer' name='model_year' ordinal='4' />
                  <column datatype='real' name='list_price' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='staffs.csv' id='staffs.csv_99860EDB508A49FB84764BC424098C3C'>
            <properties context=''>
              <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='staffs.csv' table='[staffs#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='staff_id' ordinal='0' />
                  <column datatype='string' name='first_name' ordinal='1' />
                  <column datatype='string' name='last_name' ordinal='2' />
                  <column datatype='string' name='email' ordinal='3' />
                  <column datatype='string' name='phone' ordinal='4' />
                  <column datatype='integer' name='active' ordinal='5' />
                  <column datatype='integer' name='store_id' ordinal='6' />
                  <column datatype='integer' name='manager_id' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='stocks.csv' id='stocks.csv_BC538AC131CD41F19B20CF71397AACFD'>
            <properties context=''>
              <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='stocks.csv' table='[stocks#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='store_id' ordinal='0' />
                  <column datatype='integer' name='product_id' ordinal='1' />
                  <column datatype='integer' name='quantity' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='stores.csv' id='stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C'>
            <properties context=''>
              <relation connection='textscan.1an0dyv0oul54a18iit3t08zb2xy' name='stores.csv' table='[stores#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='store_id' ordinal='0' />
                  <column datatype='string' name='store_name' ordinal='1' />
                  <column datatype='string' name='phone' ordinal='2' />
                  <column datatype='string' name='email' ordinal='3' />
                  <column datatype='string' name='street' ordinal='4' />
                  <column datatype='string' name='city' ordinal='5' />
                  <column datatype='string' name='state' ordinal='6' />
                  <column datatype='integer' name='zip_code' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[brand_id]' />
              <expression op='[brand_id (brands.csv)]' />
            </expression>
            <first-end-point object-id='products.csv_486A16755D1C437CA957AEBF3F4EEC96' />
            <second-end-point object-id='brands.csv_61F2ED33BE0347A7BD6B7BB2D9363C29' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[category_id]' />
              <expression op='[category_id (categories.csv)]' />
            </expression>
            <first-end-point object-id='products.csv_486A16755D1C437CA957AEBF3F4EEC96' />
            <second-end-point object-id='categories.csv_71BD837DD43F483598C7C88CB647E41B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[customer_id]' />
              <expression op='[customer_id (customers.csv)]' />
            </expression>
            <first-end-point object-id='orders.csv_46C7D394AC914F539F480FC357ED6A9E' />
            <second-end-point object-id='customers.csv_9D895F9D75224D45B0D535CB1A7C4CAD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_id]' />
              <expression op='[order_id (order_items.csv)]' />
            </expression>
            <first-end-point object-id='orders.csv_46C7D394AC914F539F480FC357ED6A9E' />
            <second-end-point object-id='order_items.csv_1F14E9F109724D8D99E96DA6FE6842EA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_id]' />
              <expression op='[product_id (products.csv)]' />
            </expression>
            <first-end-point object-id='order_items.csv_1F14E9F109724D8D99E96DA6FE6842EA' />
            <second-end-point object-id='products.csv_486A16755D1C437CA957AEBF3F4EEC96' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[store_id (stores.csv)]' />
              <expression op='[store_id (staffs.csv)]' />
            </expression>
            <first-end-point object-id='stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C' />
            <second-end-point object-id='staffs.csv_99860EDB508A49FB84764BC424098C3C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[store_id]' />
              <expression op='[store_id (stocks.csv)]' />
            </expression>
            <first-end-point object-id='orders.csv_46C7D394AC914F539F480FC357ED6A9E' />
            <second-end-point object-id='stocks.csv_BC538AC131CD41F19B20CF71397AACFD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[store_id (stocks.csv)]' />
              <expression op='[store_id (stores.csv)]' />
            </expression>
            <first-end-point object-id='stocks.csv_BC538AC131CD41F19B20CF71397AACFD' />
            <second-end-point object-id='stores.csv_9B877FF32D8B4CEA8AE07A65CAF9006C' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_5E9ED76723E04C9585EB222B464F0408]'>
      <activation type='on-select' />
      <source datasource='federated.18r1qsd1czddwj1eytzid14kp96c' type='datasource'>
        <exclude-sheet name='Sales per Month' />
        <exclude-sheet name='Sales By Categories (Brand)' />
        <exclude-sheet name='line chart sales and order' />
        <exclude-sheet name='Sales KPI' />
        <exclude-sheet name='map' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sales By Categories (Brand)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='&quot;New vs. Returning Customers Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>New vs. Returning Customers Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='First Purchase' datatype='date' name='[Calculation_6847441759686111232]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [customer_id] : MIN([order_date])}' />
            </column>
            <column caption='Customer Type' datatype='string' name='[Calculation_6847441759695921153]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_6847441759686111232]= [order_date]THEN &quot;New&quot; &#13;&#10;ELSE &quot;Returning&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[customer_id]' derivation='Count' name='[cnt:customer_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[order_date]' derivation='Month' name='[mn:order_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6847441759695921153]' derivation='None' name='[none:Calculation_6847441759695921153:nk]' pivot='key' type='nominal' />
            <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
            <column-instance column='[order_date]' derivation='Year' name='[yr:order_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18r1qsd1czddwj1eytzid14kp96c].[yr:order_date:ok]'>
            <groupfilter function='level-members' level='[yr:order_date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18r1qsd1czddwj1eytzid14kp96c].[yr:order_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[mn:order_date:ok]' value='92' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:Calculation_6847441759695921153:nk]' />
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:customer_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:customer_id:qk]</rows>
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[mn:order_date:ok]</cols>
      </table>
      <simple-id uuid='{C0311797-EAE4-4E0F-9A65-BB50A03CF7AD}' />
    </worksheet>
    <worksheet name='Customer Segmentation by categories'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Customer Segmentation by categories</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Avg Order Value' datatype='real' name='[Calculation_7214766604076449794]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_914230793030995968])/COUNTD([order_id])' />
            </column>
            <column caption='Purchase frequency' datatype='integer' name='[Calculation_7214766604076859395]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([order_id])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column-instance column='[customer_id (customers.csv)]' derivation='CountD' name='[ctd:customer_id (customers.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Customer Id (Customers.Csv)' datatype='integer' name='[customer_id (customers.csv)]' role='dimension' type='ordinal' />
            <column caption='First Name' datatype='string' name='[first_name]' role='dimension' type='nominal' />
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column-instance column='[category_name]' derivation='None' name='[none:category_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[first_name]' derivation='None' name='[none:first_name:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='integer' name='[order_id]' role='dimension' type='ordinal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7214766604076449794]' derivation='User' name='[usr:Calculation_7214766604076449794:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7214766604076859395]' derivation='User' name='[usr:Calculation_7214766604076859395:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[usr:Calculation_7214766604076449794:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[usr:Calculation_7214766604076859395:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[usr:Calculation_7214766604076449794:qk]&quot;</bucket>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[usr:Calculation_7214766604076859395:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:first_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_7214766604076859395]' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Aaron&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Abbey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Abby&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Abram&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Adam&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Addie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Adelaida&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Adelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Adena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Adrien&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Adriene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Afton&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Agatha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Agnes&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Agustina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ai&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Aida&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Aide&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Aileen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Aimee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Aisha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alane&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alanna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alden&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alec&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alejandrina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alejandro&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alesia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Aleta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alexandria&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alexis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alfredo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alica&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alishia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alisia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alissa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Allie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alline&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Allison&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alma&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Almeta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alpha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alyse&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alysha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Alysia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;America&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ami&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Amina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Amparo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Anderson&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Andreas&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Andria&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Andy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Angele&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Angelika&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Angelina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Angelique&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Angella&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Angie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Anisha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ann&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Annabelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Annett&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Annis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Anton&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Antonetta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Antony&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Anya&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ara&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Araceli&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Arcelia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ardelia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Arie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Arielle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Arla&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Arlena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Arline&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Armand&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Armando&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Arminda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Arnita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Aron&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Arvilla&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ashanti&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ashely&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ashlee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ashleigh&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ashlie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ashton&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Aubrey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Augustina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Augustus&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ayana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ayanna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Babara&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bao&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Barbera&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Barbra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Barrett&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Barry&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bart&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Barton&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Basil&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Basilia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bea&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Beatris&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bella&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ben&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Benito&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bennett&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Benny&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Berna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bernardina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Berneice&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bernetta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bernita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Beryl&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bess&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bethany&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bettie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bettyann&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bettye&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bev&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Birdie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Blanca&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bobbi&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bobbie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bong&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bonita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Boyce&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Boyd&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Brain&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Brenda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Brent&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Brenton&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Brianna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Brianne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bridgette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Brigid&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Brigida&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Britteny&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Brittney&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Brittni&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bronwyn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Bryce&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Buford&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Burma&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Calandra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Caleb&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cameron&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cami&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Camila&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Camille&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Candelaria&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Candis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Caren&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Caridad&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carisa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carissa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carlena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carley&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carlie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carline&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carman&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carmela&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carmelina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carmina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carola&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carolann&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Caroline&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Caroll&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carolyne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carroll&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carson&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Carter&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Casey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Casimira&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cassandra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cassidy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cassie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cassondra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Catarina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Catherine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cathey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Catrice&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cayla&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cecelia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cecil&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cecilia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Celestine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cesar&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Chanel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Chantay&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Chantell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Charise&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Charleen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Charlene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Charlesetta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Charlsie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Charlyn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Charmain&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Charolette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Chasidy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Chauncey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Chelsey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cher&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Chere&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cheree&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cherelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cheryll&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Chi&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Chloe&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Christel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Christia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Christiana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Christiane&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Christoper&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Christopher&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cicely&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ciera&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cinda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cindi&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cindie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cinthia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cira&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Clare&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Claris&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Clarita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Claudio&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Clelia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Clementina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Clementine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cleopatra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cleotilde&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Clorinda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Coleen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Coleman&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Collen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Collene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Collin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Conception&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Conchita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Conrad&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Consuela&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Corene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cori&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Corina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Corine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Corinna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Corrina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Corrinne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Courtney&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cris&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cristobal&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Crysta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Crystle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Cyndi&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dacia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dagny&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Daina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Daisy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dale&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dalia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Damian&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Damien&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dane&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Danielle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Danille&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Danilo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dann&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dannette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Danny&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dante&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Danyell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Daphine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Darcel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Darcie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Darren&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Daryl&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Davis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Deandrea&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Deane&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Deangelo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Deanne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Debbra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Debra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Deirdre&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Deja&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Delaine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Delana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Delbert&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Delfina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Delila&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Delma&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Delmar&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Deloris&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Demarcus&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Denis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Derrick&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Deshawn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Desire&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Desiree&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Desmond&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Destiny&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Devin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dewayne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dexter&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Diana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Diane&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dione&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dionne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Divina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dollie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Domingo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Donette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Donnetta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Donovan&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Doreatha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dori&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dorine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Doris&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dorothea&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dortha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dorthea&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dorthey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dottie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Douglas&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Douglass&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Drucilla&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dung&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Dwain&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Earl&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Earlean&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Earline&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ebony&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Edda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Edgar&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Edith&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Edmund&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Edra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Edris&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Edythe&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Effie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Efren&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ehtel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elaina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elanor&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Eldridge&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Eleanor&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elease&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Eleni&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elenore&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Eli&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Eliana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elinore&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Eliseo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Eliz&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ellena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ellsworth&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elma&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elmira&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elmo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elnora&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Eloisa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elouise&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elvera&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elvia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Elvina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Emanuel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Emelda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Emmaline&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Emmett&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Emmitt&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Emory&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Enoch&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Eric&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Erik&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Erlene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Erlinda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Erma&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Erna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ernest&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ernestina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ester&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ethelyn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Etsuko&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Eun&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Euna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Evelin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Evelina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Everett&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ezra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Fairy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Fannie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Farrah&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Faustino&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Felica&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Felice&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Felicidad&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ferne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Florencio&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Floretta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Florrie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Flossie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Fran&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Fransisca&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Freddie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Frederica&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gabriel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gabriela&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gabriella&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Garland&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Garret&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Garry&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Garth&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gayla&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gayle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Genevie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Genevieve&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Genny&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Genoveva&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;George&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Georgeann&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Georgeanna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Georgetta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Georgina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Geraldine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gertha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gertrud&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gertrude&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ghislaine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gilbert&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gilberte&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gilberto&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gilma&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ginette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Giovanna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Giselle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Glady&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Grace&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Graciela&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Graig&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Greta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Grisel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Guillermina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Guillermo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gussie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gustavo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gwendolyn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Gwenn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hae&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Han&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hans&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Harold&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Harris&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hassan&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hayden&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Heather&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hedwig&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Heide&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Henrietta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Herlinda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hermila&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Herminia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Herta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hilary&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hilda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hilde&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hildegarde&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hipolito&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hollis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Holly&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Homer&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Honey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hope&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hortencia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Houston&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hubert&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hue&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hugh&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Hye&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ilda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ileana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ilona&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Inez&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Inga&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Inge&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ingeborg&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Inger&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Inocencia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Iola&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ira&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Irving&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Iva&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ivelisse&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ivette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ivonne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Izola&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ja&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jacalyn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jackeline&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jacquline&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jaimee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jama&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jamaal&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jame&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;James&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jamika&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Janae&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jane&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Janella&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Janelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Janetta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Janie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Janine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Janna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jaqueline&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jasmin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jasper&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Javier&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jayme&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jayne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jayson&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jeanett&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jeanice&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jeanie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jeannette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jeannie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jeffrey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jeffry&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jenee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jenell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jeni&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jeniffer&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jenine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jenise&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jenna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jennell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jennette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jennie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jenniffer&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jenny&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jerald&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jerlene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jerome&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jeromy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jerri&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jesica&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jessika&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jesus&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jewel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jewell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ji&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jimmy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Joann&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Joaquin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Joe&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Joeann&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Joel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Joesph&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Johana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Johna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Johnathan&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Joi&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jone&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jonell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jong&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Joni&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jonna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Josef&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Josephine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Josh&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Joshua&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Josie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jovita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Joy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Judith&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jule&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Julee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Julia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Juliane&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Julianne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Julienne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Julius&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Junita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Justa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Justin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Justina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Jutta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kaci&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kaila&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kaley&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kallie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kam&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kami&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kandace&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kandi&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kandis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kanesha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kara&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Karey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Karl&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Karla&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Karole&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Karren&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kasha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kasie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kate&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Katelin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Katharina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Katharine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Katheleen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Katherin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Katherina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kathie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kathyrn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Katia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Katina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kattie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kaylee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kecia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Keitha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kellie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kellye&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kelsey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ken&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kendra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kenton&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kenyetta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Keri&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kermit&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kerrie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Keturah&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Khalilah&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kiana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kiara&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kiesha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kim&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kimberely&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kimberley&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kimberli&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kimbery&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kirstie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Klara&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Krissy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kristel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kristen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kristofer&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kristy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Krystin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Kylee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Laci&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ladawn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lakenya&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lamar&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lanelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lanie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lanita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lanora&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lara&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Larae&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Laraine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Larissa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Larraine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lashandra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lashawn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lashawna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lashunda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Latasha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Latashia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Latonya&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Latosha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Latoya&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Latricia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Launa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Laure&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Laureen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Laurel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Laurence&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Laurette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lavern&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Laverna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Laverne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lavette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lavina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lavinia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lavona&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lavonda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lavonne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lazaro&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Le&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lea&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lean&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leanna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lecia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leeanne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leif&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leigh&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leila&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lekisha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leland&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lenita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lenore&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leola&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leone&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leonore&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leslie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Leticia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Letisha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Letitia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Letty&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lewis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lezlie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lidia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Liliana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lillia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lilliam&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ling&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Linnie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lise&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lissa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lizette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lizzette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lizzie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lloyd&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Loan&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lois&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Loise&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lolita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Londa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Loni&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lonna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Loraine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lore&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Loreen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Loreta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lorraine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lorrie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lory&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Louanne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Louis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Louise&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Loyce&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lucas&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Luciana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Luciano&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lucile&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lucilla&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lucio&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lucy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Luis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Luke&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lurlene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lurline&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Luz&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lynda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lyndsey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lynn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lynne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Lynwood&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mable&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Macie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Magali&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Magda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Magdalena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Maira&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Major&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Majorie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Malinda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Malisa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mallie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mandi&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Manie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Maple&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marcel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marcelino&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marcell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marcene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marcy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Margaretta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Margene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Margert&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marget&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Margit&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Margorie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Margret&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marguerite&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mariam&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mariana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Maribel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mariela&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mariette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marilyn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marisa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marisol&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marissa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marjorie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marjory&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mark&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marlen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marlo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marni&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marquerite&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marry&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marshall&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Martha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marvin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mary&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Maryalice&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Marylyn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mathilda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Matilda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Maurice&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Max&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Maximina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mazie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mechelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Melani&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Melanie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Melba&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Melia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Melita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mellie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mellisa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Melodie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mercedez&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mercy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Meredith&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Merideth&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Merlene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Merlin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Merrie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mi&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mica&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Michel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Micki&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mikel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mila&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Milagros&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Minerva&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Minnie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Miquel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Miranda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mireille&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mirella&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Miriam&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Moira&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Molly&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Monica&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Monika&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Monty&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Morton&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Moses&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Mozelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Muriel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Myesha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Myrl&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Myron&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Myrtie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Myrtle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Myung&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nakisha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nanette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Narcisa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nathalie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nathanael&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nathaniel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Natosha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Neida&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Neil&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nenita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Neoma&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nestor&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nettie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nevada&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Neville&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nichelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nicholas&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nicki&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nicola&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nicolas&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nikita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Noble&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Norine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nova&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Novella&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Nubia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Obdulia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ocie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Octavia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Odette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Olevia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Olimpia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Oliva&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ollie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Olympia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Omega&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Omer&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Onita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ophelia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Oralia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Orval&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ouida&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Pamala&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Pamelia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Pandora&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Parker&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Parthenia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Pasquale&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Patience&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Patria&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Patrina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Patsy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Paul&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Pearl&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Pearlie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Penney&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Penni&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Penny&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Petronila&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Phebe&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Philip&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Phillis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Phuong&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Phylicia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Phylis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Phyllis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Piedad&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ping&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Pinkie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Porter&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Priscilla&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Qiana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Queenie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Quyen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Raeann&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ramiro&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Randee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Randolph&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Raphael&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Raul&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Raven&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rayford&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Raymonde&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rayna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Reatha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rebbecca&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Reena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Regenia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Regina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Regine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Reita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Renato&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Renay&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Renita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Renna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rey&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Reyes&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ricki&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rico&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rikki&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Risa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Robby&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Robena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rochell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rochelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rod&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rodger&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rodney&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rodolfo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rodrick&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rodrigo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rolanda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Romaine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Romana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Romelia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Romeo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rona&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ronald&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ronna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rory&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rosa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rosalba&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rosalie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rosalva&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rosamaria&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rosanne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Roseanne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ross&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Roy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rozanne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rozella&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rubin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rubye&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rudolf&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rudolph&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rufina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ruth&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Rutha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ruthanne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ryan&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Salena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sally&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sam&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Samual&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sandee&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sandy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sanora&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Santa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Santos&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sarah&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sarai&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Saran&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sarita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Saturnina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Scarlet&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Season&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sebrina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Selene&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Senaida&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Serafina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Serina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shae&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shanda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shanelle&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shanice&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shanita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shanna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shantae&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shantel&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shanti&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shara&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sharell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sharie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sharika&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sharla&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sharyn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shasta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shauna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shaunda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shawnda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shawnna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shay&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shayla&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shea&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sheba&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sheila&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shemeka&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shenna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sheree&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sheri&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sherie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sherilyn&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sherise&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sherita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sherril&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shery&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sheryl&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shiela&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shila&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shiloh&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shirely&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shona&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shonta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Shu&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Silas&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sindy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Siobhan&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Skye&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Soledad&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Somer&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sommer&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Son&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sonja&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sophia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Spring&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Stacie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Stan&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Starr&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Stefani&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Stefany&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Stephaine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Stephanie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Stephen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Steve&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Suellen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sung&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sunshine&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Susann&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Susannah&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sylvester&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Sylvie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Syreeta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tad&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Taisha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tajuana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Takako&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tam&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tama&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tameka&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tamela&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tammera&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tammie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tammy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tanesha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tangela&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tania&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tara&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tarra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Taylor&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tayna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tempie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tenisha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Teofila&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tereasa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Terese&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Terra&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Terrance&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Terrell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tessie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Thad&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Thalia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Thanh&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Theo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Theresia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Thurman&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tiana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tiesha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tilda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Timothy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tiny&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tisa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tisha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Titus&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tobie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Todd&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tomasa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tomeka&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tomika&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tommie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tona&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tonda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tonisha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tonja&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tony&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tora&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Toshia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Toya&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Trang&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Travis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Treasa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Trena&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tressa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tricia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Trinidad&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Trinity&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Trisha&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Trista&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Trudy&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tu&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tuan&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Tuyet&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Twana&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ulrike&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Ulysses&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Valentin&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Valeri&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Valery&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vallie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Van&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vance&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vanda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vanessa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vashti&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Venessa&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Venus&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Verda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Verdell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Verna&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vernell&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vernetta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vernia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vernita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vernon&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Verona&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Veronika&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Veronique&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vicki&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Victor&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vikki&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vince&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vinnie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Violet&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Virgen&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Virgil&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Virgina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vito&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Viva&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vivian&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Vonda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Wai&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Waldo&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Wallace&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Walton&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Wanita&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Weldon&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Wendie&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Wes&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Whitley&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Whitney&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Wilda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Willetta&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Willian&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Williemae&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Willis&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Willow&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Winfred&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Wm&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Wynona&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yahaira&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yan&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yang&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yanira&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yevette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yolando&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yu&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yuk&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yun&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yvette&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yvone&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Yvonne&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Zelda&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Zella&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Zelma&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Zenia&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Zina&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Zona&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Zora&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Zoraida&quot;' />
                  <groupfilter function='member' level='[none:first_name:nk]' member='&quot;Zulema&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]</column>
            <column>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:first_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' value='210' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-style' value='normal' />
            <format attr='text-decoration' value='none' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[ctd:customer_id (customers.csv):qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[ctd:customer_id (customers.csv):qk]' />
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[Multiple Values]' />
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_name:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{15B43E4B-E2E4-439B-9FB8-287A0E3BF3AF}' />
    </worksheet>
    <worksheet name='Num Of Customer'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#499894' fontsize='17'>Total Customer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column-instance column='[customer_id]' derivation='Count' name='[cnt:customer_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='224' />
            <format attr='text-format' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:customer_id:qk]' value='n#,##0;-#,##0' />
            <format attr='height' value='90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f6f7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:customer_id:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#499894' fontsize='18'>&lt;</run>
                <run bold='true' fontcolor='#499894' fontsize='18'>[federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:customer_id:qk]</run>
                <run bold='true' fontcolor='#499894' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{687FC5FB-21D6-4E7C-BCDE-DDD5EFDF9879}' />
    </worksheet>
    <worksheet name='Sales By Categories (Brand)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sales By Categories (Brand)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='First Purchase' datatype='date' name='[Calculation_6847441759686111232]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [customer_id] : MIN([order_date])}' />
            </column>
            <column caption='Customer Type' datatype='string' name='[Calculation_6847441759695921153]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_6847441759686111232]= [order_date]THEN &quot;New&quot; &#13;&#10;ELSE &quot;Returning&quot;&#13;&#10;END' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='Brand Name' datatype='string' name='[brand_name]' role='dimension' type='nominal' />
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column-instance column='[order_date]' derivation='Month' name='[mn:order_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[brand_name]' derivation='None' name='[none:brand_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[category_name]' derivation='None' name='[none:category_name:nk]' pivot='key' type='nominal' />
            <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column caption='Store Id (Stores.Csv)' datatype='integer' name='[store_id (stores.csv)]' role='dimension' type='ordinal' />
            <column caption='Store Name' datatype='string' name='[store_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18r1qsd1czddwj1eytzid14kp96c].[Action (Category Name)]'>
            <groupfilter function='member' level='[category_name]' member='&quot;Children Bicycles&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18r1qsd1czddwj1eytzid14kp96c].[Action (Customer Type,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_5E9ED76723E04C9585EB222B464F0408]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_6847441759695921153]' />
              <groupfilter function='level-members' level='[mn:order_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18r1qsd1czddwj1eytzid14kp96c].[Action (Store Id (Stores.Csv),Store Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_5E9ED76723E04C9585EB222B464F0408]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[store_id (stores.csv)]' member='3' />
              <groupfilter function='member' level='[store_name]' member='&quot;Rowlett Bikes&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:brand_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18r1qsd1czddwj1eytzid14kp96c].[Action (Store Id (Stores.Csv),Store Name)]</column>
            <column>[federated.18r1qsd1czddwj1eytzid14kp96c].[Action (Category Name)]</column>
            <column>[federated.18r1qsd1czddwj1eytzid14kp96c].[Action (Customer Type,MONTH(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:brand_name:nk]' value='30' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
                <format attr='size' value='1.626187801361084' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='561' />
                <format attr='maxwidth' value='561' />
                <format attr='minheight' value='120' />
                <format attr='maxheight' value='120' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_name:nk] / [federated.18r1qsd1czddwj1eytzid14kp96c].[none:brand_name:nk])</rows>
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]</cols>
      </table>
      <simple-id uuid='{0487E3D5-F160-4772-858A-EF4EE5D95663}' />
    </worksheet>
    <worksheet name='Sales KPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>KPI</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='Category Id (Categories.Csv)' datatype='integer' name='[category_id (categories.csv)]' role='dimension' type='ordinal' />
            <column caption='Discount' datatype='real' name='[discount]' role='measure' type='quantitative' />
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column-instance column='[category_id (categories.csv)]' derivation='None' name='[none:category_id (categories.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[discount]' derivation='Sum' name='[sum:discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:discount:qk]&quot;</bucket>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]&quot;</bucket>
              <bucket>&quot;[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_id (categories.csv):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' value='center' />
            <format attr='text-align' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' value='center' />
            <format attr='width' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' value='183' />
            <format attr='height' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:discount:qk]' value='#e9f3f2' />
            <format attr='background-color' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' value='#e9f3f2' />
            <format attr='height' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' value='64' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e9f3f2' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F4178D80-102A-4A73-9D80-B882D8D65AB8}' />
    </worksheet>
    <worksheet name='Sales Qty'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#499894' fontsize='18'>Sales Qty</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[quantity]' derivation='Sum' name='[sum:quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='227' />
            <format attr='height' value='92' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:quantity:qk]' value='#f2f6f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f6f7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:quantity:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#499894' fontsize='18'>&lt;</run>
                <run bold='true' fontcolor='#499894' fontsize='18'>[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:quantity:qk]</run>
                <run bold='true' fontcolor='#499894' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D06C569F-B101-4E8A-8700-101C120FB446}' />
    </worksheet>
    <worksheet name='Sales by Stores'>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column-instance column='[category_name]' derivation='None' name='[none:category_name:nk]' pivot='key' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='144' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]</rows>
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_name:nk]</cols>
      </table>
      <simple-id uuid='{DC41364B-6075-47AD-B731-2917FD4CBB86}' />
    </worksheet>
    <worksheet name='Sales by store'>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column-instance column='[store_name]' derivation='None' name='[none:store_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[pcto:sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column caption='Store Name' datatype='string' name='[store_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='431' />
            <format attr='width' value='518' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:store_name:nk]' />
              <wedge-size column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' />
              <size column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' />
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[pcto:sum:Calculation_914230793030995968:qk]' />
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:store_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f5f5f5' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A3EBECF1-3EE3-4731-909D-EFC85564D70E}' />
    </worksheet>
    <worksheet name='Sales by top Customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>Sales by top customers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='First Name (Staffs.Csv)' datatype='string' name='[first_name (staffs.csv)]' role='dimension' type='nominal' />
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column-instance column='[first_name (staffs.csv)]' derivation='None' name='[none:first_name (staffs.csv):nk]' pivot='key' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:first_name (staffs.csv):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_914230793030995968])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:first_name (staffs.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:first_name (staffs.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:first_name (staffs.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='text-format' id='refline0' value='N' />
            <format attr='vertical-align' id='refline0' value='bottom' />
            <format attr='text-align' id='refline0' value='left' />
            <format attr='color' id='refline0' value='#000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#d37295a0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' />
            </encodings>
            <reference-line axis-column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]</rows>
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:first_name (staffs.csv):nk]</cols>
      </table>
      <simple-id uuid='{C8879EC3-F29B-41EB-BF55-580C1E577FB4}' />
    </worksheet>
    <worksheet name='Sales per Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales per Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_date]' derivation='Month-Trunc' name='[tmn:order_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5d7e1</color>
                <color>#d9bed1</color>
                <color>#cda7c2</color>
                <color>#c291b3</color>
                <color>#b67da5</color>
                <color>#aa6b97</color>
                <color>#9f598a</color>
                <color>#934a7d</color>
                <color>#873b71</color>
                <color>#7c2f65</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' y-index='1'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' />
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk] + [federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk])</rows>
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[tmn:order_date:qk]</cols>
      </table>
      <simple-id uuid='{5EFFEC18-18B6-48FB-AB7F-514FE8425F0E}' />
    </worksheet>
    <worksheet name='State wise Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='18'>State Wise Sales </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='City (Stores.Csv)' datatype='string' name='[city (stores.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Rowlett&quot;' value='&quot;Rowlett&quot;' />
                <semantic-value key='&quot;Santa Cruz&quot;' value='&quot;Santa Cruz&quot;' />
              </semantic-values>
            </column>
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column-instance column='[city (stores.csv)]' derivation='None' name='[none:city (stores.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[state (stores.csv)]' derivation='None' name='[none:state (stores.csv):nk]' pivot='key' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column caption='State (Stores.Csv)' datatype='string' name='[state (stores.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;TX&quot;' value='&quot;Texas&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[Longitude (generated)]' field-type='quantitative' max='-6470328.4446318988' min='-15014621.82780212' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[Latitude (generated)]' field-type='quantitative' max='7396198.4692490296' min='1906761.5591722964' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' palette='green_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' />
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' />
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:city (stores.csv):nk]' />
              <lod column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:state (stores.csv):nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:city (stores.csv):nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='12.034278869628906' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='170' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18r1qsd1czddwj1eytzid14kp96c].[Latitude (generated)]</rows>
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9CA3DB54-E7B3-4910-ACDB-78E493FCD347}' />
    </worksheet>
    <worksheet name='Top 10 performing product'>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:product_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_914230793030995968])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:product_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:product_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:product_name:nk]' value='83' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]</rows>
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:product_name:nk]</cols>
      </table>
      <simple-id uuid='{6FFA6237-D4F3-4784-A11F-40F49E05E777}' />
    </worksheet>
    <worksheet name='Total Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#499894'>Total Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='221' />
            <format attr='height' value='91' />
            <format attr='text-format' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f6f7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#499894' fontsize='16'>&lt;</run>
                <run bold='true' fontcolor='#499894' fontsize='16'>[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]</run>
                <run bold='true' fontcolor='#499894' fontsize='16'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6141A02A-BD75-43EF-9621-1B7BF27C5DDA}' />
    </worksheet>
    <worksheet name='line chart sales and order'>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column-instance column='[order_id (order_items.csv)]' derivation='Count' name='[cnt:order_id (order_items.csv):qk]' pivot='key' type='quantitative' />
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
            <column caption='Order Id (Order Items.Csv)' datatype='integer' name='[order_id (order_items.csv)]' role='dimension' type='ordinal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_date]' derivation='Month-Trunc' name='[tmn:order_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:order_id (order_items.csv):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:order_id (order_items.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk] + [federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:order_id (order_items.csv):qk])</rows>
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[tmn:order_date:qk]</cols>
      </table>
      <simple-id uuid='{9309903C-E692-4B66-B313-F116F60B84AC}' />
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;NY&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[Longitude (generated)]' field-type='quantitative' max='-5538186.3894443037' min='-8575152.0114394631' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[Latitude (generated)]' field-type='quantitative' max='6097777.2956775092' min='4414525.5175998537' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:state:nk]' />
              <lod column='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:city:nk]' />
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18r1qsd1czddwj1eytzid14kp96c].[Latitude (generated)]</rows>
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{711DB97D-AAC5-4B43-9F8A-5D0E919E6198}' />
    </worksheet>
    <worksheet name='sales and discount plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
          </datasources>
          <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
            <column caption='Sales' datatype='real' name='[Calculation_914230793030995968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[list_price]*[quantity]' />
            </column>
            <column caption='Discount' datatype='real' name='[discount]' role='measure' type='quantitative' />
            <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
            <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_914230793030995968]' derivation='Sum' name='[sum:Calculation_914230793030995968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[discount]' derivation='Sum' name='[sum:discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_date]' derivation='Month-Trunc' name='[tmn:order_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:discount:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1231' />
                <format attr='maxwidth' value='1231' />
                <format attr='minheight' value='320' />
                <format attr='maxheight' value='320' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk] + [federated.18r1qsd1czddwj1eytzid14kp96c].[sum:discount:qk])</rows>
        <cols>[federated.18r1qsd1czddwj1eytzid14kp96c].[tmn:order_date:qk]</cols>
      </table>
      <simple-id uuid='{2AA60431-1CA7-4F74-9CAA-206A7B249615}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1700' minheight='900' minwidth='1700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='brands.csv+ (Multiple Connections)' name='federated.18r1qsd1czddwj1eytzid14kp96c' />
      </datasources>
      <datasource-dependencies datasource='federated.18r1qsd1czddwj1eytzid14kp96c'>
        <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
        <column-instance column='[order_date]' derivation='Year' name='[yr:order_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='17750' id='3' name='Total Sales' w='15063' x='875' y='1625' />
        <zone h='18500' id='4' name='Sales Qty' w='15625' x='15563' y='1125' />
        <zone h='21250' id='5' name='Num Of Customer' w='16875' x='30813' y='1625' />
        <zone h='47667' id='8' name='State wise Sales' w='35588' x='64176' y='52222' />
        <zone h='11000' id='9' name='State wise Sales' pane-specification-id='0' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' type-v2='color' w='7294' x='92176' y='54889' />
        <zone h='41889' id='10' name='&quot;New vs. Returning Customers Over Time' w='35706' x='824' y='57667' />
        <zone h='16889' id='11' mode='radiolist' name='&quot;New vs. Returning Customers Over Time' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[yr:order_date:ok]' type-v2='filter' w='11941' x='1059' y='19556' />
        <zone h='46556' id='12' name='Sales per Month' w='39824' x='60118' y='889' />
        <zone h='31556' id='13' name='Sales By Categories (Brand)' w='43647' x='14588' y='22556' />
        <zone h='27111' id='14' name='Sales By Categories (Brand)' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[Action (Category Name)]' type-v2='filter' w='12765' x='941' y='33667' />
        <zone h='43111' id='15' name='Customer Segmentation by categories' w='25176' x='37765' y='56889' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2200' minheight='2200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='16' param='vert' type-v2='layout-flow' w='99058' x='471' y='889'>
                <zone fixed-size='280' h='46556' id='12' is-fixed='true' name='Sales per Month' w='39824' x='60118' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='167' h='18500' id='4' is-fixed='true' name='Sales Qty' w='15625' x='15563' y='1125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='159' h='17750' id='3' is-fixed='true' name='Total Sales' w='15063' x='875' y='1625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='191' h='21250' id='5' is-fixed='true' name='Num Of Customer' w='16875' x='30813' y='1625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='27111' id='14' mode='checkdropdown' name='Sales By Categories (Brand)' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[Action (Category Name)]' type-v2='filter' w='12765' x='941' y='33667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='31556' id='13' is-fixed='true' name='Sales By Categories (Brand)' w='43647' x='14588' y='22556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47667' id='8' is-fixed='true' name='State wise Sales' w='35588' x='64176' y='52222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='9' name='State wise Sales' pane-specification-id='0' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' type-v2='color' w='7294' x='92176' y='54889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43111' id='15' is-fixed='true' name='Customer Segmentation by categories' w='25176' x='37765' y='56889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16889' id='11' mode='dropdown' name='&quot;New vs. Returning Customers Over Time' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[yr:order_date:ok]' type-v2='filter' w='11941' x='1059' y='19556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41889' id='10' is-fixed='true' name='&quot;New vs. Returning Customers Over Time' w='35706' x='824' y='57667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5424ED8D-E675-4446-B533-01E4216E31E0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sales per Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:customer_id:ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:item_id:ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:order_id (order_items.csv):ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:product_id:ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:product_name:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[qr:order_date:ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[tmn:order_date:qk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[yr:order_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDC42613-CB9B-46B0-A40E-745047D3B9A8}' />
    </window>
    <window class='worksheet' name='Sales By Categories (Brand)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18r1qsd1czddwj1eytzid14kp96c].[Action (Category Name)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:brand_name:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_name:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:city:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:model_year:qk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:product_name:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF4D06D8-15BF-4009-A1ED-4B1C39208D35}' />
    </window>
    <window class='worksheet' name='Sales KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_id (categories.csv):ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:city (stores.csv):nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:city:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:customer_id (customers.csv):ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:customer_id:ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:state (stores.csv):nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{70311C75-792D-4945-A711-EFD7811B55E1}' />
    </window>
    <window class='worksheet' name='line chart sales and order'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:order_id (order_items.csv):ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:order_id:ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[tyr:order_date:qk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[yr:order_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8552224B-FB44-40ED-A42D-BF9BFF527D07}' />
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:city:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:zip_code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E6A5923-C660-4166-BC56-EF9D601A70D9}' />
    </window>
    <window class='worksheet' name='Sales by Stores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_name:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:city (stores.csv):nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:store_id (stores.csv):ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:store_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FFF7C50-59CF-4553-B7C8-D5FE12B163D7}' />
    </window>
    <window class='worksheet' name='Top 10 performing product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C09FEC54-5C6D-42BF-93FA-FA9467047284}' />
    </window>
    <window class='worksheet' name='Sales by store'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:store_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:store_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47E3ACD5-E983-48E4-AB32-19174B837C5D}' />
    </window>
    <window class='worksheet' name='sales and discount plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[:Measure Names]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[tmn:order_date:qk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[yr:order_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77A026F8-E4AA-4814-A359-437EEC83DFD2}' />
    </window>
    <window class='worksheet' name='Customer Segmentation by categories'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[ctd:customer_id (customers.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[cnt:category_id (categories.csv):qk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[ctd:customer_id (customers.csv):qk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:category_name:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:city:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:first_name:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BF4DF41-7F04-44D3-8DE7-FD4FF0A361B0}' />
    </window>
    <window class='worksheet' name='State wise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[sum:Calculation_914230793030995968:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:city (stores.csv):nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:state (stores.csv):nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6ECB6417-E096-4226-9ED9-0028FEA864E8}' />
    </window>
    <window class='worksheet' name='&quot;New vs. Returning Customers Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[yr:order_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:Calculation_6847441759695921153:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:Calculation_6847441759695921153:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:customer_id:ok]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[yr:order_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDE002BC-B39C-49D4-8B6C-5678D9D0F948}' />
    </window>
    <window class='worksheet' name='Sales by top Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:first_name (staffs.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50CDD350-AAD1-4DF0-8AA3-A7E297B03DC4}' />
    </window>
    <window class='worksheet' name='Total Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6915F408-1160-4DCB-A297-9FA32A2FB81B}' />
    </window>
    <window class='worksheet' name='Sales Qty'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{56B7F8B5-5CA3-42CF-84B9-7004D83DB763}' />
    </window>
    <window class='worksheet' name='Num Of Customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:Calculation_6847441759695921153:nk]</field>
            <field>[federated.18r1qsd1czddwj1eytzid14kp96c].[none:customer_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0DDB63C-4CF9-456B-89DE-341844B9D3FE}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='&quot;New vs. Returning Customers Over Time'>
          <zoom type='entire-view' />
          <highlight field='[federated.18r1qsd1czddwj1eytzid14kp96c].[none:Calculation_6847441759695921153:nk]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Customer Segmentation by categories' />
        <viewpoint name='Num Of Customer' />
        <viewpoint name='Sales By Categories (Brand)' />
        <viewpoint name='Sales Qty' />
        <viewpoint name='Sales per Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State wise Sales'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Sales' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{911EEB69-744D-463B-B5B2-E89837351E9E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='&quot;New vs. Returning Customers Over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Segmentation by categories' width='192'>
      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
      pxoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='94' name='Num Of Customer' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales By Categories (Brand)' width='192'>
      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
      mHqo1pxKSekAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='148' name='Sales KPI' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='84' name='Sales Qty' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales by Stores' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales by store' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales by top Customers' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales per Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State wise Sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO296ZMkyZUf9osjIyPyzqy+qnu658AMBiABLHYBAitisaRotDUT+UEfpM/6
      m/QX6Ju+SUbJRO6KJooGo/YidmexWOwMgDl7ps86uqryzoxTH7Kf10tP9wiPyKiawcz82tqq
      KjPCw8P9vefv8ufWyclJFkURLMuCZVkg0N/0WZZlSNNUfEfIskz855/lgd9fhKK2AMC27Z1r
      6TN6Hu8/fbdcLtFqtXb6zt+Hj0OZfuveIa+NJEmQZRlc1630nDqQZVluH/m4yFiv1/A8b4ce
      dGPnui6SJIHneeKdl8slHMfBer1WXu95nrjG930sFgsxrzLiOC4cSzeOYy3h846naQrLspTE
      xu+l73Sdkq9VwYToOdI0hW3bO23KhC9/32w2sVgs0Gq1CvtQlgny3oEzp/weWZZpv79qyEzP
      PyfGkGlFda8K9Llt2/A8D6vVCkmSiHduNpuIoghZlkGmSf6MMAxhWRba7TZc18V6vd5L4Np8
      sPMkIR8ATuj0Uo7jiO9s21YSpOo5qu9Uq4oJVM9TES617TjODqPyd5DbK9OfvHeo8m7Xibz+
      6QQB/a36Xr7W9300m03xdxRFAADHcZQSm9pL0xRJksBxHNi2jTRN0Wq19hIYdpIkWx/IBJim
      qSASmSGoc0Qs8osSYxBzyM+R/yZpUBaO44jfTSQX/77b7WIymSiX7H1Un6IVTkVkdTGF67po
      NBp7taEj8KJ7+HiTIJQJNIqiLcJN0xSLxUJIdlW7fB5c10UYhrBtG1mW7fWutoowiRCJ+POW
      N5X6BGCLKVREJDNa1cl3XVcMBO+rrMer+k/3dDodLBYLhGGofU6RblwFXMjw/pUZD9W1JCU9
      zyvVnzzpbiIIiugDuCR2WXdfr9dI0xTL5TL3GbZtC92eVN84joteTd9eEATG0ooeqlKVCDLn
      87blz+TVpCxc14Xrulqjiz8rjxEty0Kn00GWZWI51o1B3aoLtUfjWoX45eubzSbCMBQEUgb7
      GPsAtuiDVBbS9el/kiRYrVbieYQ4joUQylNnad49z4NlWcJ5UGVFtW3bRq/XQ7PZFKoKJyx6
      EeoAfxBJXpWklYlchyJvAalR8kD4vi+eLatxMuOpGFTuQ5qmaDQaWxPAHQB5hFk3Y5QlQpWU
      TdMUcRwXOiPqhO/7mM/nyu+4RqFSdUkQkXGrGn+6znEcNBqNLUGrEgYm4+jGcYxms4lOpwNg
      w4Wr1Wpn4NI0FVybJMmWNc9BDy0ypOSX13WaMxUfBHK5qSaYPCn8O5VXR17JLMsSLrhms1mK
      CGVBoBICpsKgjHeFo9lswrbtXFXuqqESgvw7HaECG9ug3W7D8zzMZjPhFQK2x4E8kir7jquq
      RivAarUSD0uSBK7rIggCQeQ6kIThL5bH4aqB0nGo6n5ZpSF1JY5jpX5OxlGRN0O+p9lsIkmS
      Unql7AjQTbBJO3m2kgzHcRAEARqNBjzPQxRFWC6XOytinTBZ7VROBBofbhRzArYsSzCu67ro
      drtaTyKNMalSfCVQxX/y4ALAarUSUo8CGSRBdY3Yti0GWuVKpBfkP/MGTLUk8gEqGnidgasj
      Pp2KlGUZWq0Wzs/P0Wg0hLfCRJqQdOJt7ms4501imqbKgNFVI28uHMdRMr/JHAIbY7jRaAgm
      GI/HW9Ket5llGRaLRa5qWgTBLqRWTKdTzGYzIQF13gSK4smQib+sPqszZIpeRuUBKjLY8zAc
      DtFqtYRXwtRDo/J8mT6zbi9THVC9b14/+TvL45CnHhF4YItc6PIzybYpWulMxtOVCYT/ziU7
      NUaET0ay4zg7OqcsvYvAB0a1mqgISNUuPZMzn6weydcU9YuYyFQv16kwVVGncV3l2fK7y8Qs
      o2i+VTYdhxyYVTFfkiRYLBZYr9c7xrLc/yIYJ51QY1ztSZJka2nTGbcmnogiC54zh2VZwtWX
      B1nXpHtVfdSh1WohjuMte6KspDZlOBlV7AgdZI+dCao8s0jAFI0/qXX8J7+X2ubxAt17Ga0A
      vu8LdcfU8Gs0Gmg0GnAcR/hgqSPyQ+VAmqqjpgyi+kynMpGk4NeRl0ce1DyisG0bURSJaGOd
      RCk/WzUOdahFjuOg0+kgSRLMZrPSfSx7vazv560W/P2JSamPplrEPjaA22q1YFkWptNp4cW8
      UxSEmEwmW99zKS1LcJ2xm9d5U+NJ7h8AsULR5/RfdpEWtVc1O1O3hOsMcHl86rIJkiTBdDqt
      rT15xVe1S2OsEoq8Hflvlbolg49TGceICjYRc7vdRhAEhZHDLNtk5FEKda/X28rFKCIWuVPk
      GtM9S+USbTQaWgKWjS5TnVR+LodOtzTxbvHot4746bq8vu5rS5gYjSbg/eBChT+HoHMC6OaV
      Oy+KXOlcMMr2Km+vCC415vu+CKKoJDV/mTRNMZvNRNJVs9ncInzyzfNOmE5gkeeEcn/CMNSq
      RcBlNFh+Lh+wPMlkosOWsQmKjGP+d97q9EX0FHHkCRST1bysjWK6ApDdSPEugssvIGImacED
      XfJDyUihsHQURWg2m1uhcL6k1fliJoE23UDzDETTPqmk2j5QEb/qcxl5DHtdjKFawT9v5I2Z
      67oiYGhZmzQfbgdt6R62baPb7YqUVJ06QT8XiwWiKBIPoMxKfl273S5F/PJyJqsGZXNb+JIK
      bFYnObeoCHJI3tS9q8O+RKNSFfZRj8pCpc7Jfcu7t6jdomtlOylvPmjvAV+FuLayo7Dbtg3X
      dYWbMc8zlGWZ2FHF8/4Hg4Hw0e4zMbqX0umyqutNViCdukegVZFHOfdlgiLI/ebPy1P9Pm+J
      TPEh7vRQrRoqIi7jADChK8dxcHFxgU6ng0ajIfYctFotkTaywwBkkLXbbZHdF8exlujIIPY8
      D81mE0EQiOgxSSies1OkW+smVyUdighX146JysHbonEgj5mK2FTtFEm7vGfnEYTu3jyV08TY
      r0u9k9tUMYBsD3DPUpkU7jz1j1Kxj46OcO/ePfFMokXbttWBMMuyhDSnzSKr1Uo7YVm2SaMI
      wxCr1QqtVmsrXZUexq12mRhVxGSynJpIAvmaKtmSQRBguVzC87ydjd95zKtjkqIVSeUhkdVR
      1XW6LZ55z5L7uQ8sy9rah8DHRqc+ykZyUX9kwZA3lr1eD0EQYD6fYzAYALiMd2VZlh8JJv2b
      bAIVE/CJSdNUeJEo4MTTpa9abbhqeJ6H8Xi8kyrNJ7lI6ueBgoqmNsq+Y3kVcyEzAMFUvTG9
      jqLzeVgul7Csjav+6dOnGAwGiOMY6/VaCOTCCA8ZDd1uV+jAlrWJslI4WmYCru4cHR1huVxi
      MBgoCeQ6jbcoipCm6daGbACYz+fKvagquK5buG2vDFTSr2y0tm5Mp1N0u91K99I7qHbW7Yss
      20SJO51O4W43EraNRkMwZRiGWCwWW9cZhzjJLiAXKZ8kmbCjKMJ0OoVt27h37x5OTk7geR56
      vR6m0+mWF4Pall/U1NhUqVN578AlLN0TBIFxtFfXHzkPXaeimLQF6L1dZR0L8uokq2SyykHE
      QltE64I8FiZ6Pt3Dr6W+yW3K19Bni8VCZDOTI0MZBzABqTbkKeK6tDxhSZKg0WhgPB5juVyi
      0+nAcRwMBgNcXFwU6npl1SWVV8HEZVr1OWVUnbx3LIsqRMnHQ9f/IvWNX1fFE1bkMDC5D8CW
      FsKvke1GLmDDMEQQBDg+PgYADAYDse2yUpKLZVnodrsIgkAYyHJgiTxAq9UKh4eHAC6ZotFo
      iI0cKsmwr25KmZtFDMAHbV/IaiARx3UReZW28laHMm2X1emrMA1huVzuqKuyc0HFDJ7niZXj
      /PxcaDKVa/CRfjWfz5FlGdrttggz00PX6zX6/T5OT09x9+5dsd9WpfdWQZ6KwVO1i66vOvF5
      9xJRcWYwbbtuu0jVXt47lF0R88ZAfva+wq1MJi/vB22fzLIMvu+LqnJ7F6EcjUYYj8c4Pj6G
      67ro9/siE9D3fcFpJJV5ntC+KNuOaqLLEJzs0pPbUV1n6tqj6/mWyqv2mpF+Lb+Pbjx0Y2Wq
      PtUBOcNUxQT0WR5jRlG0qX5SR4cA4ODgALZt4+zsbItL0zTF/fv3RQIbuRB1XoIyg6mTAHzp
      kz8nULAuiiIjj4VlWco8ItVqJi/1ZXXr6/KMyQJANV58Pq7TY6cDxZfyhIpO7ZL7n6ZpPQzA
      N2cPBgNhKPMdWVTwlBvSVdJzdT73PGLn99Ln5EajELnJM+Xf+bO4t4JL/n0k43VIVhMBQu9G
      OTU8UbLIFZn3dxVQcba8OZEFHRU22MsNqoM8ALxKAV/C6TramUQGtIoJivRGWdpySSbvFdBV
      syY1jYIleeCE2Ol0dmqJ5l1f1K6sJqmukX83VY1U3jpd20Xf8aCm53nKwsIq1M3AnU5HpN4U
      odlsimTM6XSqVL/3ZgDKz88jZNJtycNDdd058cr3cKhUCS5hKTWBf666noOX53McZ2vbo+r5
      fOXRVZWuCnnJ5gy9j9rByz1ehWep3W4Xrp5pmuLp06fo9/vCLgzDENPpFI7jiFQFUziOg9Vq
      ZcQAFO/h2cCyOrd3IfpGoyGKGHGQzkwTats2fN/HcrlEHMc7RbWKVBjZrcjbp2Q7+k/FYXVL
      8M4gGKpjFCzLU4Py3iEPqr7qzjwoAqkrURSJKspyG3ntmDyDBF9R2gaNy/n5OZIkwaeffgrP
      8xAEATzPK2SgvHZ1oP4vFgucnZ1hPB5rqwTuvQKQRF+v1zs79el7cpmSW5Dfe35+LhLoaNId
      x8F4PBZp1UmSoNVqIQxDLJdLdLtdsQ/Btu2tyGCeD152SfKBIJVMJY3oniRJBLPJ3+ugU+d0
      G+B1Ho080KaPOI6F2sNXOFUNpzLqjwxyGuh0cX6/bds4PDwUzoYHDx4I5pRTUkxBqfp596vG
      TTbqgRoYgB6mSiXgTBDHsXA9cW/KarVCo9EQuUW0ryAIAsRxjPl8jm63i7OzM3GAAk2sSteu
      6jrkRmweVPq07LLMM87zXHM68MnkPz3PE1UrKP5CTKpru+zY6Lwt/F1pOy1wqU7SHM1mM/i+
      L3zvtGKQLVh2cxKwYejpdKpkgCLVUaaP2hiAVI4iY45ytAm3b98Wv/OEO56JSnlIk8kEw+FQ
      SHpewZr6UdTPvGvW6/XWJOnazPOcFDFRlWrNOluJV4DOeze+YpW1BXQMQLYFcKkOyUamZVlY
      LBZYLpfie3JjUil02kzV6/VK9StPDc0jfhm1ncZGdYLydpCpjsDhE8uPWZLdcI7jYDQaiXvk
      fPMiFFWLBja547TZnvrJ+5DnU+aQiUZFRCaeIpVxzD/ndtRVukuL2tbNOdlnrVYLs9lMCBZS
      c8kFXUUVykuF1s0ZAOHAoGtqYwDaRqkbDKojRBl6eSsFXSdLPBPDLc+LZALP88RWUBUTFBXK
      1a0O1A/O2MfHx+j1ehiPx2i1WuLQvjRNEQSB0HNJvfF9X9hScrtXhX3aTtMUr7zyCtI0xXA4
      3PpOVhvLYjab5aawyyqjZW22Qrqui8ViIei01vM4aRVQVVEgo5Xrp7rlKm/Z1en8Jl4BuX0d
      KEIs66hFTCavWvIEy5WjHcfB2dkZXNdFHMc4OzsTqoDjOJhMJiJVO8s29ZgODg6U73RVKPMc
      1fjI78yv5UZp2fdROSuKBAIRPS/vWRsDWNbGH686dI46J68OnKDz9DYTvbWM3meCRqOB5XIJ
      3/eVTFeknpj0tdfriRz19XqNu3fvCtUuiiIMBgMx0VS+vo53K4JOqNDnVewYuZ2rhuoZYRgK
      J0btKhA9lG+BzONImfuLjOe6+2nSbrPZxHq9hu/7oi86g1TFBLqJpvt5ugjVraH/juNsEfy+
      x4GWRVVPWpXnVHkWX5nzDN8i1DqilmWJY3p0IO8FVxVMyhzKbZjcn9emyb4DItD5fJ5brk/2
      hcsuUZ3alvd8U/fpVaCIoPY1uuX5q0K8ee5Tk/4RDdTOALpzu+TrTNqSCYW7uaq68+S2ixiB
      6qaSy9HkfVTtyUwiHxmkYxwTZrkK5DF62X6VPa7VBLr8Jnlui1bNWlUg4NLAUFnhHGXq1csM
      UAaytFG1aQLVSSX8GbxdmUk5wfN4gc6O0D1Hfp+rYgzTNvl1ZZwQdYDK9ci1mqgvJycnQoXs
      drtblcJpf0ocx/XbAMSZuo0WZVx38kTrJK2OsFWToqvzWcQI3C2q60Me0dK1KmaUr9G1cRX2
      kO5ZMvLmq8imquMoIxlyXEfuA1dbeZVCqg5BBwvWvgIQR1LuR5ZlykzLosmUGcfUAJSJjEdJ
      6TgnWTLTNUWTSBJFJfHpd7kvunZ1n5mqh6rnyRmPuvvKoqy9IuOqjHe+QV4e69u3b2+5m7mg
      omzSLDOoC1QWWbY5voYbjGRI8kK5eb50+l6W0PLE5w28yjim7ZllViHengpFRFf2OXltmBKh
      ikGvQg3Jm0v+/CrfmSDv3Vqt1tbf3OvIvXpXwgBy/jXtyqHDrek6FUwmLMsudyUVbaiRmYby
      T4DdbMY80E4kXSSY6/Y6Cc3fT/d33VCpX7q+EfgOP1nw0N9l+px37nLR+MvP48+lUpVFbcpu
      ao4rYYA86Z43eHmEk2WZqChhWZY4nIO4me4j5pP1Q2qTzjCgMLqpV4nbAEWGMH+mqd2yr5Qu
      6n+ZMw5s297aZCQ/pwrTBkFQuPdaN6665+Ud06trh/8NXAED5Ol7lATF1RBKk6bP2+22SJmg
      3HtKBZCXNYJs+BZNTrvdxnK5RBAERtfLXhx5S16eSmVi3KoM97IenjpXkjzXcJ6QMmm36vfy
      2NC4mdgXfCxllfVKVgDVDitShRaLhfDPEuF3u13xQrPZTGzqoOiobmLlZZEzQBEBUZTX1EdN
      iWm0QQfQ+7dNbBTde+xjqJo+7yrsgTyYBB3LMvtkMkG/3y/VD5Uwqp0BVCBipDMESCfkVQYI
      7Xa70D3JpQF/KV4zRiZCeXN8GIbwfd+IaLJsUz+UMhApa1Onf6r6r1pp+HWmKkoVA173zH2u
      KYM0TeF5nvExvCrw+eTtVTnBk89D7f4pWf/m4EsXP21FJmh+7I9MOCpC4vfIUD3DRFpyIrAs
      S+x9lj+nn6YlHXXvpLtOd29VdSevzbz+7APL2mwnzSPWskxHNkWZSt0qreBKjWBuCBLRmZ5p
      Zar2FF1P33EJQjuTTE9jlFcTy9rklq9Wq8r7WnnfZE8L/071u+q+MuDeLJVnqG7PFM17le2P
      HLKtRIeW7INaVwDVgKq8IVUkmCz98trQfUefywfl5XkfdPo8STWuvhXZHXmGpe7eorGqsiLo
      3qluyS8/UxczuU6bhFZr+n9luUD8gYQ8VaUMykwcX3kAdYqGiiBkXVv1jHa7LewCU68NEQId
      McsZjX6XVwS5r7LRrLqensPjFnntclCOzb7zRGVZ2u222GlH/aiqv9fNLLUzQN6ml7pQZqmW
      n03qT5Hv3eRzup/vHDN9VyoTz9sxeQfqt+q9de4+lQrHr5FR10owm83geR4uLi5wfn6OIAjw
      4sULoT4Oh8MtR4Tp2NVJT7UbwTzrruxAmkpQPqll7qETK+lwhCKiUxGOfI/v+4jj2EgXjaJI
      FIKSVRcTRubvLPdDZ1/JzFPGUN8HlrU5YJEOTo+iSDCBZVkiQ1PVz+vElRjBus/LDKqpVCjT
      Jp0UQshzt5rW9acqbLPZTKmacRWEkgJlIWFKmByq1Y+YoIxw0LW9L7JsU7fozp07CIJARPG5
      enaVNocpriQOYOrWM2lH56XgMJHUVbwQsnTOIwxyg1KgjwJnVBWb7qdDRSiGQAxEq5MMbh/I
      fZCZiPfVNPhUNFdVmYHqAVHVPrKVVquVqAqXJMnOdtPrRq0MIHM1J6Cq6lAV/7RqIMkPLU96
      nseIItq8kp0u9N5qtXBxcYFerwfLskQZGDlYlmXZjt6bZZs6RCoGUPUvz0Aug7wx5tK6ygoV
      hiE6nQ7Ozs6E3TWfz0Vm8M2bN/Hs2TO8/vrrWga/DlybCqT7nk9CGIaYzWY4ODgQn3MCpOtN
      YwkcVISJyi4WbducTqfiXODBYCAOAe90OgjDEIPBYGeyeGheN5EysdEGjbpy5lWrgun1vF/8
      P7kOyxBnq9XCYrHAcDjEer0WY75cLnH37l1EUYThcKh0KlwnamWAqmoOvfRsNkO/38fjx4/R
      arUwHo/RbrfFZhRKjuv1esbn+hKoiO5sNttRK1SwLAvL5VLUoYzjGN1uF+PxWGRK5nmKdN4a
      nYOgzMb+uqXlviuJCp7nidWPZ+xSjVDaG6Lb23tduPJcIBMVhj4PggDj8Rij0UjkCdFRq1Q3
      lD5XwcR1qSqpqCJSkuZExCQBu91u4SHNef2hFYyrFmWI76pUhSK3cJ3SmcrYU9o1McGXzgYA
      ynlpgiDY8tKMRiPEcSyS6Kg9nWTNG8A8A1nWQXWuQ25g5kFlqKpWHN1qcF2uyjzw/l6VakJ5
      Y1VsDMK+/aqVAfKO4ilSNwB18MZ13a2IYZUX5hNJwSedJ6kO6FaIPCa8CpQhXNV48FVB533a
      B/u6a+voQ20MkGW7pQ9NdG26jtowQZEbVAfdgQ77TIDu2Vxt4kEq1bW8jbqlbRUm0P2k303m
      1BR5Z5hdB2pjgCRJdl6kqluuzH0qFSUPnMi4fr+Pq7aoT6YrYN1QxTH2nRMdE1ftH62WVeqN
      rlarrVKc1E/eR5pbla2VZTVtis+yzX7dqkVTVac6mhA1XdNoNOC6rgi7F/VVdq2aPk++XnWP
      qv+6OAP9VK1Kumeq2rgK5Pnm63xuGIbK+IwJaFNMmUP2ZNS2AtS9jJkOBp1Az49n1YEPsqkn
      Zx8USX/dxn0dKJ2AcmjIRQxARJzpbIEoikR7Vd6TfP/X4ZunzFDqvynqoLlaGEBVN/O6jLyy
      LjTZLVvGuNN5RnQSvm5PTaPRwOPHj0VVM4qsAht1gA7Da7VaiKJI5LzLh1OUwXW5JqlcIRUv
      M3mu7/uYTqd7PbcWBlDV5ykz8VwH54RVZlmsYkCrlniTWIKJ29JE7y8rmS3LEsTc6XTw4sUL
      cUBdp9OBZVnCbZymKebzeaVjlEyzW3V6NaDee5B3PbBhYrILqMJgkUq47ypeGwOoJrwM8aqu
      rdPbkPdsehZ/rg66OILcpiq4ZRIULAIllwEQp8Vw8NwjOpBOfmYRI1BFjqseex2yLBMMKBuy
      wOVZCsvlMvesMBPUwgA00CaHTctQETm97L4nkZhCtfLw/nGPEf+c7lW1x6G69jpUizwBcl2q
      TRVYliVyh2j86T8dp0tu97KnS8qoxQq0LKsw1ThPcvIXJJjmixdJYxl5bRKR88MwZBeiqq9F
      7e+zOl4FitSzz7NvHKoyk7Ztw/d9sQqMx+P9nrF3L1FcDY4fBqEiWB1hlTUi65ZqMkOovuN/
      55VmMbEbrhM6Rgc+/77JkFdkoqNWq6WtD2uKWg/JU4FUi7LBrSrG71VILt4m31jPv6tiq3xR
      pCyw6w0z8YJdB/LoxrI29WG5TVS27doCYbI1roqCcgkvS5s8HbtOaVS1LXnSTWwTXfCoSIW6
      bujsnrzrv0jM6/v+VrFjU5yentZ3QIZlbWqur1arrSirTjrLklPFGPQ7hcnrGHQ6H2DfAk0q
      yCud7HHh/d9nya4TZRnxi0T4HLwkZhksl8v6GIC2ACZJshWFVBkx9DePyhJINyUQA6RpisVi
      sVfYm9rbp0ZlkiRI01REoDnyJoAzdNWaOHUjj2hMVKIvClqtFubzeSl1iHb51TYLZJ3nGa5F
      Op1KFaKN1CS9r+LEwTIgZpQJuMgzxFO9dYdsfB5QMUFdEWxZ/dUxvm5PgKlU50cgmYK2xtZq
      BFPBI11QS44MmuTC0HFLZfekXjdc14Xv+1iv19oVpsoy/XkgL8ZRBqvVCmdnZ2i1WqLqhe/7
      cBwHjuNgvV5vlcr3fR9pmgpJfh3qWa3rsOM4RqmtecEj+aVl9eiLAFU/ms2mmGja7sddo59H
      HKDItXkdxngQBJhOpyLXh85kSNMUs9kMvu+LVPowDOE4jmAA08g1IQzD0hpC7YroVXhtuP6c
      d+11MYgcwAOwlaEJbFYEyqlRCYTrWglM9XxTlBnnIAjQarVwcHCwlQtEP2nfNZ9nlTPExJXe
      6XQwmUyMGYCeUXtViLx6k/v4yk1ti+tiAn4KeZZtjk1ar9doNpvwfR9RFO1UQ65Lt9ZBJzGr
      ql4mAqjofVSevbzVcJ+AXBnv2pUwwD7uyn2W4+smfrmvJLXo1BjXdQWDXPd2P5mA9hmTPIFT
      5voqqEIPlmUpz6TWXVtbIIw3avLQqtAZ17rvrhr8fbIsEy5S13VF6fNWq4XZbLZ1vWVZ4qyx
      IulMqwuvRZT3U9fHMsS0Wq2U7fM+0d9pmqLZbIqK2/T9PvNRRPzUvrwimZZ05/27Nme0Ktil
      6hi/XtWGrs3rZgAe1+CG7nQ6RavV2iFYGb7vG0dfqX5OEfg46IhIjsqrYBJr4ffLacl588x3
      rpHTBADm8zm63a7SVToej40OxKsS46mNAdI03dmgzMEnh+vOOr0Q0KcT8O8+L+LXqUFRFGEy
      maDX62G9XmO9Xm8RhEwceV4v1fU6mIwDtU1MUGdE3HSVmUwmQlWh0pNkN43HY7z//vv4zne+
      g6OjI9y4cQPj8RjHx8f4/ve/X9h+lSh/bZvi6cAyk8mqGmWUo8qfl1tUZ3RzjwWl6corn6kB
      KD+nap/ka+R+lJ0LeQ44TPdv0DgtFgv0ej2cn59juVzitddew+HhIZ4/fw7P8/DkyRNRR1T3
      LpzxPM/D6ekpWq3WTiq1rM5R8K3WTfEmUkiumlDGLuAv+3nHBPIknqyKqD6nv/k1OuKqYgya
      rKj8M1Piz2MYk7ns9Xr49a9/Dcuy8ODBAwAQG+Idx8H5+Tnu3LmDi4sL3Lp1C8fHx8rSJ/z5
      fBybzaYoockheyhJzbJWq1VWx0mHs9lMeUgEBxE/N16KjlXlg75arbbqyX8eoF8HAWsAACAA
      SURBVL42m80tQ1D3Hpa1yZPSlY3h76cjRnKv5kFWq1QnQcpJilwHNxFe8ipD1/N5MRVousi+
      LKHJ2NW1KY+pbduYTqfodrs77araqK0uiLz/1BR5y7xKXciybMvjcN0gSUIeHPpbN0FZlm1V
      SiZYlnqDkKnklu+R/+vayvs8D6bqmCnxA9uCgzxo5E3jElt+r7xnZVkmMpNN+l9rNmi/38d4
      PBYBCVkalHXH0T3UFt1LOSO6UixXvTqo9M+8Z/IM2bzxKCJYk/FTGee6e3ReKBPG4b/Lx8UW
      4d1330UQBLh9+zZs20a73RZeoadPn+LOnTs7feBCJm/MSZWazWZbq6ZuDGrNBvU8T9TQ58tu
      ldwg/p3cearbzxlAXn2ukgl0EkkHSoeoKgxkhtNJwjJGs+45cpu8Xd07U7lzgkpl4eoiHZLx
      /PlzJEmC+/fv4/j4GJZl4fHjx/B9H0dHR6KdGzduiLL0uj7LRm6z2cR4PEYQBCL5TsU4tQfC
      SDpPJpOtz2WJSZ/Td2UqQERRpPQMcJ23jHFdFfywuzzk9UNVETuvDZ16o5L8Zfsit2XK5FS+
      3oSB4jjGG2+8gSdPnuDevXuYz+d4/PgxDg4OMJlM0O/34bouVqsVbt68iV6vhw8//BDf//73
      c71bqt8pnvHs2TPcvXt363shNOowgjmybFOm8Pz8fMuA4SsC6b58kPOMYbqejC2lMVPCmNsH
      tNRXOXCPjDuC7tBumXnDMNSWdef30XPkz+R+UF/ICC4aM1Wf+O+r1UpUaeDf0XO49Ac2sQDu
      +2+321iv1yKHiipGU6kdlVdHB7kO0mw2E0W2VDRyJdmgqmJMedfzgVJdT/qhqTHIQWd7eZ4n
      Su8Bl4fmjcdj9Ho941qhRaoLn2zy/GRZJurcLBYLcbI8f/+8d9A9Q9cvWVfWvYep3l7kpZKf
      pXPnEqiWT5Zl4nciUppnfoi4qa1F38srUZ6j4dqOSc3rFGcC3f30eVnPRpIkmM/nokyg7/to
      NBpYLpfiuE7LsjCZTHDv3r3CdzPVsbNsU7c0jmORKUp7pmk3kqpNne6cJ83533kVK1TMRsKl
      7KrJ+1WXd0hevfj7mfZPHpNOp6N0i9IzroQB+MEQ9KA0SzEPZzhdnGK8HmMezRGlEWzLhud4
      6Ho9DP0hhv4QnuPBgrXTZp6E1g1Qo9HAzZs3hSHabreF/UDpCo7jGFcYM/XEOI4jalxSRmiv
      1xPuYlMPDBFYGeOWrl2tVlgul+h2u7AsC/P5XJSSJ3282Wzi/Pwc3W4Xtm1rtywW9aVI9aLP
      TRmhihqra59UKgqScSP9ShjAcRyx+ydMQjy8+AQfnX+I08ULxOml8WrBgqDzl/1uuk0cdu7i
      rdFbuNM5hG1tiL7ZbObmGulAE8olANW+BFC6nIaOALjEosHt9/vCMWCiluieo5pUFZHITLVY
      LHDjxg2cnp7CsizBiM+fP8edO3cwmUwEk04mE9i2jdFopO2TTp0o6gv/+6odEyqbptVqiZKK
      NN+O42wS766iEyTx33/xW/zD0S8xi2bK6zJkO5J+Fa/w8flH+OT8Y9xu38YP7v4Qt9q3Ecfx
      tdUK3epjtp16m+eJ0BGqrOLlQedCNJGwMkajkdiTC2yEwHw+x+HhIZrNpthCSGqZiWHPj5nS
      EXWeCnyVjKBSl+h5ZFuQ2kcevCvxAk1WE/zHd/9vfHTyIdIszZ2wre+yyzayl3+4tovv3voe
      vnfne3DthjBor/pwC4JcDY72++oKgRFURKFbPTjRqwhjvV7vpBvLahP3sumgY9KyKpbc7zzv
      HH8G9VUG9xZWuT8P3LlC3qqtnKBSrRngZHaMf//u/4Xz+fnGuEpKdNjChgkswMosZMgQpzF+
      8fzvcL46x09f/WP4vo/lcgnP8/ZK5y1zPGeeF0H3t8oFrGuPf1bkQKBr+MRyws5bafIcCFUY
      gPdNNZZ5AoHuefHiBaIowmAw2KjML49Mok1FtMNr33pQcl+vxAY4mh7h//zVv8NsPQMswHE3
      BBon5TYpWLCQWZlYEQDg4cUnSNIY//L1f4UgCET2aZUCUybEwr/X6bO6e+SJzyN4Vb/ktlSq
      n87tWZWQrwI6huCf06k25+fnotx5FEWYTqfCVru4uKjMAHyulQZypVYVmK2n+NP3/sOG+MF0
      L9cBLOxVjY3waPIIP3/81/jnD/5InDBepRQG75/pNdzYk33TOugM37JEqmMWeYNLFeLfh2nK
      rBw6O4Z2esmrGh+7wWCQ6ykz6aeur7Uo0mma4mcf/Azni7Od78glaNs2LMU/lHsXfHD2AT46
      +xAAhBpUduN5FdcigUuUoiIAlqU+woeXJeftqtri+ydk96nsJ69iWF61V6boOTQP3HVOxCqX
      1a/iCi5CLQzw4ekH+ODk/dzOcEKwbXuj5xv402VkyPDO07/FIloAgPBeLBaLir2vF0Wrhoro
      dcSr0q9lQtiHmXk/qt6nK/xVdN9VMl7emMgHlu/NAFES4uef/lx4bXTg0mtLKpLhy//mfyr0
      yHk0x3sn74oXochqlTiBKVSDmmf4yXEBHaGbMAX/W04Lrioh5XfbFybMbFre8ipcpbqx35sB
      Pjv7DCez48LrLGuT3+E2XFj2Rv3JMmboSu8qVCSoJ+jDsw+wTi4J3rI2KbAmpxtWhSyF8wxZ
      +RoiAJVKJBvy8mQVEYQJ8V+HcZzHALwfeYwgC459UGR7WZa1HwNkWYb3jt4rlP70MMu+TBEg
      D9F2g3Qxu0/DBItogSeTJzvPCIIA8/n8SpZYrp/qllfeV9WAyyuIbdtbPn6dn1zXH3punj1R
      h5qkA1+Fqq5EeXNVNxPI2IsB1vEaT8dPlN9dHF/gw19sjNU4jPHB332Av//ZL/H8k+d476/e
      w2q+wvvvfIDHHzxBhgzr5Rrv/uV7QAYsZ0v85m9+i+n5FL/92/exmCyUasGjySNk2M1qpJLq
      V7GEyv9VOjD/nBMEXUPE0mw2RZ4KgRNrkbrF29T11/TddJ+rDPa8PpVlgCJpXwcD5K02ezHA
      2eIMi1BtfLZ6LUGYrufijd/7Bjr9Ns6PL/Dg2w/wj3/xLkZ3hgiX601nbAuut1EFnn74FHEc
      45NffYIsS7FcLEV6cZIkiOMYYRji2cVTnF+cIwxDTKfTLUIKggDr9bpWJpAHs8gDI6tD/FpO
      5NxFlyetdTYH31ur03VVfSvS24vGrqoXTe6v/HnR/WUhCxU+jnsxwPniXKv+eP62b/7ZR09x
      +MYhXnnrHj751UO0+i0s5yvE4SY+0Gg2YNkW1qsQi+kSx58eI7OAm6/dxPGjk03JQccFssso
      7jJeIko3sYCLiwus1+utZ9Lm6DpiELpBLCJYFYjgwjAUmal5xKTz+hRJtzwdWGek572z6j1M
      UVWvr1NtU7W1VyBsHqqT3ADg2cfPkEQJHv32EXoHPXRHPbT7bYxPxujf6OPwG3fw9ONnuPXq
      LTz69SP0bvaQRAkmp2N894++g8nZBEEnwGe//gxvfu8b8BrehtkyCKazLRuu38CgPUC/31fu
      P6ao8VUcS5RHfLrPKWjHK0vQd/JqkGf0yn/Lh43I0Kkwsuqm+py+03m8SHrz95CfuY/kzuuz
      DnJ/tUy+TzLcn3/8/+Hnn/7X0vdlWYY0uazqIK8iIkOUvzslyrFrLVj47978t7jduV24C42q
      MuzLBLTLiwduTH4Cl7q/vNwXSTna0GH6rDI/ZahUPPpMFXXPssskM939ZaESBEX9V/3NQaUY
      5f7vRQ2OVT0ZzXZseLaHNEsRRxoV5WViHAARL7BgCSawLAuO7ezo1aqBbzQaonrBPkxA1S/K
      Ls2yC1TW13URY2CTxmyS7mGa4CcTtpzxKoNfFwTBzvjyqsyyIKqi8nD1LG9cTED3NxoN5RbQ
      vRjAb/jKzy9OLvDoN49x494BRocjZGkG13OxXoZwGy6efvQU999+Bav5CkFnM6D/+OfvonfQ
      xSvffAVxFAs3aZIkiNYR2n22jzYjA2azmwwwy0txXXfrIIsqkKWTDioiyzNOeZ69ri3eB04k
      /HNTqFaoIjvGpH9179moMtaq73RG/l4M0PfVJaubLR/Zy30An/zjQzz6zSPc/9Z9NIMmkjjB
      iycvcOPuAd75T3+HWw9u4tart3Dj3gHuvHEH7/3Vr3Fw9wCzsymyDLj92i389ue/xQ/+5Aew
      HKYaZYDneggaQamJbzQaezNBGfdiGZXAVOfXXc+ZQud1Ut1fZFCb9KUMTMavDsNbvr52I/ig
      fQMNu4Eo3a7Rk6UphreHOHlyijiK0b/Zh+M6uP/NV/D0o6fwAg/Hj05w/+1XMLuYIegG+ORX
      D2E7DjqDDm7dv4mjh88RLkNYNnDj/s3dh1vAwB+g6XqgdzRdckkdqsIEZQnARIIV3a9aOfLe
      M08iqvpmSvyyl42ewaVsUTtJkuSe56tjWJ0klxle1yawKcdCtgp9thcDdJodDNsjHE+Ptj73
      2z6Gt4c4fONw4+a0ALfhwnEd3HvrHm4+uLnZM7xab1QdG3j7R99EmqS40TyAZVn45g+/uXmp
      7PJQBRl3e/dg247Sf2yiDtm2rWWCPG+DqRTaV1pyQi/DSCqDUCbUKmg2m3tvTFExkQqyR0qn
      wpisqmRLtFqtreLKe6tAju3grRtv7TCAbdvoDDZc7ja2H+G4DgJ3M4hOwwGylxY6ixtYsOC3
      L+0LH/5OkpxjOXh18OrOy4o2DIiF0hB4dWN+P/1fLBYbg/vlRmoTg7RO/3UZqCSyTg0zlfz8
      +n1RRngUuYNNiV/+ndrPshqS4d6+/S34rtoYLoJlWYAFNLwGHPvSoyS7Rcn/zz8+7B5iGKgr
      GJSZKPLq6CQTDZrv+8Jte13EbeJHLyJik/uKCE3XFhcSZVanOlBlFVMJgr0ZoO/38e07/6Ty
      /TR4jrtd+U2uFrF1Dyx8787viZIpvK0qJ8rzlYCgKt3dbDYrG877ouidTN5Z5/cn6VikUuQZ
      42UcA2UgS/CyrlWZ6LNsO39rbwawLAv/7MGP0GnuVt4q247rXKpLVDKFp0UTXh++gbvduzv3
      69x4JkxBK4FqY811VaDIg6krsOx9KhUpT+eW/67i58/D2dkZTk9PMZlMsF6vMR6PEYYhTk9P
      EccxZrMZ4jjGYrEQhb/4WQ2mfa6NAQCg7bXx3771r/YKjFmWBduxt5hAhV6zhx/f/0NY1mWd
      niIVwPT8Ytu24fs+5vP5Tt8+D5hKdZVqomJ6nVuRtyG7T3nSmmq12MctKYOnssznc8xmMywW
      C1xcXMBxHFFB4vHjx1itVliv14iiCOfn55WebVk1lUa0LAtv3ngTP3r1x/jrh39ltD9A1w6p
      QnEc76Q9NJ0mfvrqH6PdaG/dwydnX5C3YLFYiIJS+6Boj0AZqCYwD1XVItV3RQRfl5Cgo1I9
      z0OapmLfd6PRQJZlmM/nuHfvnliVV6uVmCeZieU+UQYAX9Fryw6zLAs/evXHiNII73z2t3sx
      ge3YsFMbSXoZum44DfyL1/8lbrfvbL1omUBTmT4EQYDlcikKKVVhMJmAyhIJNzB1xFfWi5MX
      7aWfRdHcq1IJsyzbKbDFba4syxC0AszDJSbLGVbhGhkyNBtNdJttdPwAnuuJlXy5XG69L60w
      VBsVqLkukGM7+KM3foq218ZffvIXiJLdQyxMYTsvk8ayFL1mHz998FPc6R5uLdH7EL8uKsq/
      p0GkPJIyE5+nk1YJplGfysYgVKoNvyaPIXR92AdlPVZZlmEVrfHR0ad478kH+PT0KabLOdJs
      N+7Tbrbw4MZdfPfVb+G10V20m60dGpEzhmsvjUgPejJ+jP/y0X/B88mzym1YmYUH3VfxB4d/
      gMBtKV1usl5qirxJlnF+fo7hcFjYX1WfVCgrQXmwLs/Hz58v90FVpa5sP+TTIHl/yrRByYRF
      zJSkCf7mo3/AX37wDi7m440n3OBxtm2j7QX4/df+KX785vfReckIdPgGFyRXwgCEMA7x2+Pf
      4heP38GL+QtjtcixHbw6fBXfvf09dLDxLpWVfEVEWAbr9bowA5SeJfvXSX2S8/XLSNKyKRsy
      A+hUqaJ6nDJIJeT35nmGVO/J65zmMeDFfII//eXP8JunH2pWBrM+D9t9/Ml3f4pv3/sGwnUo
      VKxrYYBNRzdqzPPJM3z04iM8vXiK8eoCURKJZcyxHfiuj1H7APcH9/GNG29iEAwQhqE4cM90
      ouRBrSs7kU++CvIKsF6vxZlXdC+dFklBNTLKiiLLJtXvLi4u0Gg0hI5LRqRt27i4uEC328XJ
      yQlu3LghPESUYmLbNuI4LiwVTytAnl1SxAC8kK5uFX548hj/28//FJOlfsNVGblmWxZ+/I3v
      4yff+AN0O93tubpqBuDIsHGrxWmMdbxC/LJEdcNpoOk24dqOcG8CEH5gvuyboMhwrAI6p8tU
      cp+dnWGxWIjgmeu6Yo/ybDZDu92G53niMLg8mKwA4/EY6/Uay+VSHDcUhiE6nY7YQ+26LpbL
      JQaDgWAKsm2yLMPBwUHu+3GPC6C3c+Rz0OQ2KOZC4HP1/rNP8L//zZ9hGZrVeMqb3i1CB/Dt
      wzfxP/43/wau7VzfCrAPsiwTxwoB29FZuRxiFYNYZSjypV324oRhWFgGnEBl1KkOPb0DtQFc
      njJZpF6ZrAA8GEQVlbMsEwY8CQXag0y6MPUziqLcFcCyrK2dXxwqAZXnsqW0kzAMkSQJRqMR
      sizDp6dP8L/++f+BRViutpM8Hbr5SdMUf/ztH+Fff+cnIrh6JQdk1AXyxKgQRZGICsowZQDy
      CvDn0U/S2zlzeJ6H+XxuFB+Qfc50DhevAUTl3Yt86ybvw0vF82dQX8j7QWeiUduyGpbn7ZGF
      guw+le0Ofo88jmmairmdz+eAY+Hf/c1/LE38Kui9ZRn+6oO/w63uAX7v1W8DqKk26FVCZzA2
      Gg10Op0dAiYpLhdq0rWjchPqdFtV1miZ98hLyeDP1UnPvGvKQHdvXvtcyuc9v0hFpHvllfY/
      vPOf8ezsGHEcvyx9s/lfFep+WEjSFP/p3b/AZDnbzEnlJ1wjiPiiKBLnApAkGQ6H6HQ6aLfb
      aLVasG1bVKOWf1cxAU2AqgAUv56ON903CGTqAeLEIdf8qUr8ugipKcqqlqa4WE/x3rMP0Gi4
      QjVzXQfZSydJkqgq3+GlvWjBsqD8L3vAqG/T1Rx/8cE7AL7gKhCHzncsHzlKEgTY9UjQZ6q/
      Cfx7vlm8TBDKFEUqjk4dqcKERX1X2Tzyc1XCY5/AGD3vL99/BxE7RIVvZCdPVRQlL+cgxYbo
      LaFSWhYQhttB1w2tAOt1+JJ2bPCu/vLT9/CTt37wu8EAlmXlHofEJ6HdbiPLMnEur86DxKWD
      jgk4yp6lK7edpzvXzVhFMHnfup6Tx9yWZWGynOH9559o2yAbZTP+QJLEW0edbg5PzOC6jrbw
      8KYuVIJGw4X9ct/JKgrx7pP3fzcYoAxowOiMqdlspvVO0CTw0+NV11UBP9gC2K0KoYpm61BW
      yqoYqw6iL1oRqF2Ttml8Pj7+LNflOWj30Gx4OLo4xYObd3E+u4DnevC9Jp6eHcF1XRwOb2EV
      rhElETpBB8/PjzFo93AxnwDYaA+um4o4zGblcPGbpx//btgApkjTdGvXlu/74pBoQD/pjUYD
      vV5P6J8yZrNZ6UgsV1+KDOCi7+VgHncHm6Z6A+VSw3X3F/0tG8sq8Pf8+PhR7jNv9g8waPfx
      5uFr6ATtTakoy8KoO4BtWRh2+rg9uIkkS/Ha7ftoNwOMugN859W3YVs2sgzCXnDdBjyvgWbT
      Q5ZlOJ6c/m4yAE2kDNlGsKzNmQGdTkdpP/AoaJqmGAwGymBXWQlM/aOdZKZSUWcgmxrO/Pl5
      z9vXiN7n+fxdsizD0fhE08bl7zd6I4w6A7yYnOO1W6+g1QxwMZsgzTJ0/DYu5hO8evMewijC
      ZDlDmqY4Gb/Qtkt9W0Xh7yYDEOGqPpdtBVoJKDqqm8Tlcqnd87uP56es10Z243JVqorBWfU+
      Feq2FaIkwmy1uwOPPyaMIpzNLvDeow9wOLqFyWKGuwd30PbbuNW/gRfTc/TbXcxWC8RpgsPh
      LaRpihu9A9wd3Ybu1YkRvtCR4LLI80rEcYzz8/Ot1UOneshlu9frNdbrNXq9Xuk+yQRYJTeJ
      R4JNVj4Obt/wIJUJU8iMz1My5DZUXqQ8mwcAFusl/uc/+1+wjFbsPvndVD3bfOg3mlhFevsh
      j1+jKILj2F8uI1jnNiTIxiYnCH4NEQ0xiOd5VxJ4qnJ/VXdslfvkWqO6sVO1LX+uDQCCt2n0
      JuK3VaSvMVTU1mZ1db5cDJCnqjiOg2azuaXm0KSEYSj2mPIJy7IMi8UCnU5nK/2hjPtSJwXL
      QGbQMu3sY/QC25HbqiqYDo7twHUcIGff1IOb99ANOvjs5DGmS9qrffk+ruOiF3RwNrsAALT9
      FmbLBdp+C3OFeiXjS8UAebAsC/P5HNPpdEsykYT3fR+j0WinwsDTp08xHA5hWS/3Ke/hTqzL
      +1L13n1sAW7M56k+Rf3g9zYcF0EjwHSpJ9S238L7Tz7Ca7fv4/6NBjJkmK8WcGwH0+UMbb8F
      27JxozeCZVm4O7qNj48+w9v3voGfv//3OJ+NtW1b1leIAQDg4OAAzWZTEDk/aZ02YK9WK5Fp
      Gscxbt26hclkgjAM0Ww20ev1RABmn0BWGZWkLiO2jrZMXJuqe7hNxa+92RvheKL22AAbPf+P
      /umP8Pcfv4uD7giWBTQbHhzbwZ3h6/jw6Sfot3t4cOseHp8+w9H4FJ8eP0a7GeQSPwB4TuOr
      xQBUXUBVBS7LMmFsUr4R6cB0+kwURTg7OxMFXtvttkjpLQOdXq3DdUeKdZB1fpVUN1kR+Pev
      3XgF7z7+4GU7u7r7p8eP8fefTHCzN0IYb+blZHKGXtDBfLXAxXyCMI4QJwnSLMV0OcO90R2M
      F1MMO30tE1gWMOoMvloMQC5R3TGqi8VC5BzRZNOE0saR0WgEx3Ewn89xdHQE27ZFEI3iCUXg
      bav6SNfIn32eUBG+CmWZ9Ru3H6DpNrCO6aw03hbwYrrR7Y8uTre+W7Ho8XgxxXgxFX+fZfmS
      n9r+5p3Xv3oM4DgOOp0O5vO5MsIahuFWro5K56e6NTdu3IBlWZhOp1itViKiDEBpL8jtmH6u
      8rAUxSaybLPzjLZJqqBjNhWDFuVjmbp35XZH7QFevfEK3n/+yZb0r8rzpvznWDa+c//trxYD
      AJsJoP25chlEUnvI40FSPcsy5bFKZEu0Wi10u12kaYrxeIw4juH7Pnq9njiWSUbZ4BiH53k4
      OTnJZYI0TbFYLHDr1i34vq9U0+pKxitjy8gMYNs2/vCt38dHx58iYUx01Vrfd1/9Frpe+6vH
      AMB2qrMMrvs7joNWq4VOp4M0TTGfz7e2F/KCWcQonU5HnEJzfHwMy7LQ7XbRbDYRRVGlQJhq
      FWo0GhgMBlvvpHrPFy9eCMO/qN3rgtzX12++grcP38B7Tz7Muae+5/sND3/8rR8hTZKvJgMA
      xV4Lkq60nZB0/cViISojTKfTy5MuXxITHegNAMPhEK7rYrFY4OTkBI7jCIO6jOFMG3vkvnNj
      nphSlurD4RDPnj3D4eHh1l6J6wbv2/HxMYIggOM4Isj40zd/iE+OH2O2mueqWnkw4WcLwE/e
      /me41TvAer3+ajKAZVmiWgJtEpe/J8hbLvnG8SAItgxqWaImSYIkSeA4jqi4QC7VMvlFy+VS
      MB1weVqjCo7jbK0ycRzj9u3bOD09RRAE2tXgOkDj4/u+KNcSBAGiKELL9fGH97+L//f9v9bc
      m78KyPaDjhn+yf1v4p+/+ftiLr9UuUBlQZWFZbWEJ6ENBoPcY1VJ/VksFgjDsDDyallWqfIq
      BKoxxFcamXmp7VarJfZBkErXaDQwm83guu5WRPzzQBxvNrVMJhPB2KvVCo7j4J2H/4if/fa/
      Ik5VNou+TRMGeP3mffxP/+J/QKvpC+H0lWaANE1xcXGhLLFChnCr1UIQFJ9EOZvNsFqtlOeV
      1QFKrZYrPsiwbRvtdluchMmZkTMBJdd9XquBDmmW4hcP38Of/fJnCONLBi9rA2wxBIC3D9/A
      f//DP0G7GYi5/cozAGV6TqfTHULgaci0TyCvHWIA3V6FfftJrtciw5WYl6S/fH2j0cBkstkp
      devWLSwWiy8cE2TZpkbQv//FfxZRYlMG2KhKrOyL7eAn3/whfvLNH8Bzd+fwK80AwCUT8Ap0
      wPYg9vv93B1hWZaJWEDZ/H9TkC1hAvlEehl0YPjz589x79497XWfJ7IswzoO8f/86s/xD5/9
      GiGrNJ4XL6DvXNvB23ffwL/+3h9hFPT1GcJfdQYANjrpixcvRDrEdDpFv98XhDIajRAEgdZw
      pfvK1jEtA16hwhR5+Ua0Z/ro6Ai3b982Pr70upFlGV7ML/Crz36D3zz7CC+mm7qy9Fqcrl3b
      Rb/VxVt3XsP37n8Lh8Nb8Bqe1t7Jsi/ZhpiqSJIE5+fniOMY0+kU0+kUrVYL4/F4y9f+9ttv
      a9ugwNNisbgyaRpF0d57E2T4vo/T01P0+/0vnCoEbK/EcZJgvJzgdHqOi/lE7Adouh76rS4O
      OkP0gw4aClVHheSrHAfgcBwHvV4PFxcXwkCkQrBUO7PogGjL2uw/Xi73L+2nAhF92YM6ikB7
      lx3H+UIyACHLMji2jVF7gIOO+qwGOV3bRFB8zQB4Obgva80EQYBWqyUGb7VaodfriZVATucl
      UOTYdd0rIyRu4NaVIBeGIUajEWazmdEB4J8HZLUy7915Hhfdq7vOsmo6JO93GWEY4uHDh7h5
      8yZWqxXm8zmazSbOzs5wcHAA27ZFzhBFdYMgQBAEOwRj27Yog143eLCtaJthWchpHSagjUTk
      ngXwua8kpisjZ46vPANMJhPcvHkTSZLg5OQEvu+LtOjpdIosuyw37nkeP2h8IQAACdNJREFU
      PM/DbLY5uOHNN9/caa/dbmO9Xl9ZoEmOOtfBBI7jiJVOjonIIFVvOp3i+fPnCIIAruuKDUVh
      GKLX620dOr4v6tg8xE/D2VpNvupGcJqmePToEZrNpjgKiZLWSD8mSU8SPo5jtFotHBwc7LSX
      ZZt9xHJFOgAiM7RKhWm+J4FQdn+wDhQUyrKsMErs+z6ePHmC4XAo7CIi0CiKsFwuEUURhsOh
      Ms3EtD9F38kCQP7Jryf6JqakjVFpmn7NADK4K1RFCJRDQnYCHUnEBz5NU0wmkx0peHJyInJx
      HMfBcrkUWaJkfC+XS4xGI+VyTqfU0OTXaQw3Gg0REByNRko1zrIsLJdLdDodwTDy981mE0+e
      PEG32xUR6TKQCxGTyie/q/y5biwoiXFTcj0WqhsJj9/JwlhXCcu6LLve6/WUAz+fzzGZTBDH
      MWazmbLupyrfp9vtYrFYiCQ83/cFk4RhCMdxtIwHYOt8W2q7LiagE2K63a5I45YFo+d5WCwW
      W/3gIOFx9+5dAMB0Oi1dUlLVpgqqTTwkkHg6CuVMeZ6HVqsF3/eFw8OyrC/fClCnbpxlGZbL
      pbAFOCijlKpF8MM66D4qtyL3TW6HNuEAu7V4+HXr9Vok5snXlNGT80DMu1gsMB6PMRqNxKqV
      JAlevHiB27dva5mU+uU4jhAQg8GgcCUoo87pIva6FYnOdVC1/6VbAYq2IpYB7R4jQpdBR37S
      kT8Eyg0iwladVMMnjktx3USpGCKv31UFAElxz/Nw9+5dxHGMZ8+eIY5jjMdj3L9/v5D4gZdB
      Jte9ErewPH66d3VdN5f4gS8hA+gqPFcFZYRSbVECGaW0vPI8HZrwTVnuco42voxzlycRVN59
      1N+iYJCJgKCNPe12G6PRCKvVSiTPqaBiuiRJ0Ov1MJlMKm9yKYKOCSgrtqig15fODVon8fM2
      2+02kiTZUmmSJBEH9XW7XfE5rxTh+z4mk0kljwgnVGI40r9VwbCzszP4vo/pdIqDgwPRt37/
      MhmM1JJutyuIkgxb1dhRiZhWq5Ub39CNOzEynVapuk++10SNVd1H3h367zhOIT186WyAq4TO
      u2PbNvr9/k5JFUIURbi4uDBSBVTJdDoCkVWn4+Nj3LlzB0dHRwAu0ybCMBSBO6oUQfeQQT4c
      Dnfcs5ZlCQ9VHopULtd1cXZ2htFopNx7wVcrPnZFDEBxGbI3iAHKqIBfuhXgKmHbNjqdzg4D
      pGmK2WwmIsTy4Luui06ng9lsVkkf5gRPB17T55x4er0exuMx+v0+gEsGSJIE8/lmr2273RaE
      Pp1O0el0sFgslPsd+HnDRf2jvug8ObocJl1gr4iAqVCZZW1qPVH/y2oAX68ACnB1Q0Ycxzg9
      PVXe53keBoOBdqJpJcjLFlWtALygr6zTqgJB3C2oQlGeDF1DUtUUeZKXPGO0F7tKGxytVkuo
      OWXtLI4vnRFcB4hYddBNUF6ZRMuyxEpQBuSWpKVepQ7JxG6yL7kI8gacfW0rUk1oS+Y+IDcr
      7WnYB18zgAK0rMpI01TsG6DIIvnHiejycmDIL021g3Sn3MjepjKuXVMPT9F1/D3kinkAdgSE
      qgAYv4ZiJY7jCNVF13+VDcRdyVROpWrJdo6vbQAFaFCjKBJGIA02L6uom6y8lGlyzwVBIKKU
      tEdXboNA5+XmRX3rdv1ym+Ds7AzD4RDn5+doNBpYLpdIkgSNRkPYPFEUiYrZrVYLURRhOp2i
      3W6LcpRRFKHf7+PRo0e4d+/ezqb9oveiZ8lu533w9QqQA4q+Xlxc4OzsDOPxWOTs6KTPYrEo
      VJ9IinFXXV5EsyhVuW7Xb5ZlW/GULNvsm14ul7i4uBBbP0mlGY/H4vhR2hu9WCxE7Z/1ei1U
      QzK8nzx5oh1DXf4/BeiKKmOUwddGcA5oEubzuQgAyYSqUidopeBFtHQIwxAXFxdbn+kSzYgR
      5M+vIvZBVSj4GQq0gvHVSHZbkrdHNtTJprBtG6vVCv1+H0+ePNHuR9ZFeqnaXl34egXIAU0C
      dx3qruGgVAiTPQGNRmMnv0clGXXBLwBbyV91QVa3LMvC+fk5ZrNZrtRW9ZvqqVJfqdiAzNC6
      93ccB77vV4qsF+FrG8AAZBSTwQuod2bJkdu8CCtvu91ui9whIgBqo4iw5WfWtRqQscpVNPK6
      PHz4EN1uF0EQ4OjoCIPBAHEciyh1GIbodDqYTCY4PDzcIVpqm2IMRb5/Ghd+Tltd+HoFMARV
      Yx4MBjv6uE4Nmc/nyo0xMij9mjIvORNwWNYmHz+vvboSAWVQsI8CfuTFonIx3LNj2/bWkary
      SkieLdoLUZTSTRuT6tz/QPh6BTAETa7ruhgOh2L/MBm0OjWECCEvUsmDV3xPMf8cuNyRRunK
      zWZzZwWQ+1v1XVWbUA4PD3euDYJA7KTTSWgeq+Bp32QHHB4eFuZK1a36EL42giuCfONkKE6n
      U22yWLvdRpqmwg+eB0qwAzbMo2Ms13Vzq0zzz2mzDUW3dfeQ14s8QFEUCSledWWRa5rSsymL
      FtjEHHzfz31Gs9lEt9utfRX4WgWqCNu2RZlvx3FyK8dRhNgkI9S2bXS7XXQ6HTHhKo9LXjAJ
      uDSMaVWhc5LTNN0604CXWSHPDz3T9/2t68uC4gKqciuUHWpZlqjEUfQ+V6Hefa0C7YGHDx8i
      TVMcHh5uqUG2bWM6nYqIJVWJoIDXzZs3xaZsiiiThOSMROcXz+dzIY15iUTTA/l4whmpEkSc
      aZqK1YHr8ARKpsuLQ6jAc6lUahp3HLRaLTx//hz9fh++7wtBIad38OOr6sLXDLAHlssl4jjG
      o0ePhIRaLBa4c+eO2CNwfHyMKIoQBIFILkuSBGdnZ6IWUZqmaLfbODo6wg9+8IMtNSnLMuEG
      lHedcWNZxwy6pD6VZ4YIjm/LpKhw2cQ4HThRk/EcBAEGgwFOTk5wdnaGIAgwHA6Fx41iD1QU
      oE58zQB7oNfrCcKnpXw0GqHf74ujVD3PE7VzKEA2Ho9x7949YUyvVitYloVbt25tSTea9DyQ
      tOTl3AlymfQ8/VmW7lxSU2kYmQHzQCuUql/8XrJlKJ270WggDEN8+umn4vCMdrstzmkjd2td
      +NoIrglkkPJln9yGfPKppEqRNKW0Am5Y80xTWeKrIsWyulHFgCTpy4lOfgZXs1arlTCkyUbi
      Kh61NZvNRCEuz/MwHo9FGRWqxkHve3Z2JoRJp9PB/fv3S7+HDm7V4kVfYxc8UAZs6gBRBihw
      6f82OSNMlWbBq5vJOrkqCMavp2vKQrYhVLYA1+fpHanv6/V6cwbYSxcpJdGR/XN6egrHceA4
      DsbjzQHXvDarbW8OJ2+1WkiSBMPhsNbSk/8/fCCHsJEt8pAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 performing product' width='192'>
      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
    </thumbnail>
    <thumbnail height='78' name='Total Sales' width='150'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='line chart sales and order' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      wrPH/wee3BXOTIqCAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='sales and discount plot' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
